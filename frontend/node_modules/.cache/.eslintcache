[{"/home/sahil/Student-Record-Management-System/frontend/src/index.js":"1","/home/sahil/Student-Record-Management-System/frontend/src/App.js":"2","/home/sahil/Student-Record-Management-System/frontend/src/Store/index.js":"3","/home/sahil/Student-Record-Management-System/frontend/src/dev/index.js":"4","/home/sahil/Student-Record-Management-System/frontend/src/components/Carousel.js":"5","/home/sahil/Student-Record-Management-System/frontend/src/components/Home.js":"6","/home/sahil/Student-Record-Management-System/frontend/src/components/Footer.js":"7","/home/sahil/Student-Record-Management-System/frontend/src/components/Signup.js":"8","/home/sahil/Student-Record-Management-System/frontend/src/components/Navbar.js":"9","/home/sahil/Student-Record-Management-System/frontend/src/components/Dashboard.js":"10","/home/sahil/Student-Record-Management-System/frontend/src/components/EditProfile.js":"11","/home/sahil/Student-Record-Management-System/frontend/src/components/Login.js":"12","/home/sahil/Student-Record-Management-System/frontend/src/components/StudentsInSession.js":"13","/home/sahil/Student-Record-Management-System/frontend/src/components/CourseSession.js":"14","/home/sahil/Student-Record-Management-System/frontend/src/components/EnrolledSession.js":"15","/home/sahil/Student-Record-Management-System/frontend/src/components/MarkAttendance.js":"16","/home/sahil/Student-Record-Management-System/frontend/src/hooks/useVerifyUser.js":"17","/home/sahil/Student-Record-Management-System/frontend/src/Store/Slices/userSlice.js":"18","/home/sahil/Student-Record-Management-System/frontend/src/Store/Slices/personSlice.js":"19","/home/sahil/Student-Record-Management-System/frontend/src/dev/useInitial.js":"20","/home/sahil/Student-Record-Management-System/frontend/src/dev/previews.jsx":"21","/home/sahil/Student-Record-Management-System/frontend/src/hooks/useLogout.js":"22","/home/sahil/Student-Record-Management-System/frontend/src/hooks/useSignup.js":"23","/home/sahil/Student-Record-Management-System/frontend/src/hooks/useLogin.js":"24","/home/sahil/Student-Record-Management-System/frontend/src/axios.jsx":"25","/home/sahil/Student-Record-Management-System/frontend/src/dev/palette.jsx":"26","/home/sahil/Student-Record-Management-System/frontend/src/hooks/useAuthPersist.js":"27"},{"size":533,"mtime":1729166013000,"results":"28","hashOfConfig":"29"},{"size":2443,"mtime":1729165746000,"results":"30","hashOfConfig":"29"},{"size":833,"mtime":1729166036000,"results":"31","hashOfConfig":"29"},{"size":181,"mtime":1727508633829,"results":"32","hashOfConfig":"29"},{"size":1321,"mtime":1704981181000,"results":"33","hashOfConfig":"29"},{"size":9968,"mtime":1704981181000,"results":"34","hashOfConfig":"29"},{"size":4057,"mtime":1704981181000,"results":"35","hashOfConfig":"29"},{"size":2844,"mtime":1704981181000,"results":"36","hashOfConfig":"29"},{"size":1964,"mtime":1704981181000,"results":"37","hashOfConfig":"29"},{"size":21435,"mtime":1704981181000,"results":"38","hashOfConfig":"29"},{"size":2653,"mtime":1704981181000,"results":"39","hashOfConfig":"29"},{"size":2350,"mtime":1704981181000,"results":"40","hashOfConfig":"29"},{"size":9712,"mtime":1704981181000,"results":"41","hashOfConfig":"29"},{"size":22404,"mtime":1704981181000,"results":"42","hashOfConfig":"29"},{"size":16595,"mtime":1732177942399,"results":"43","hashOfConfig":"29"},{"size":3782,"mtime":1704981181000,"results":"44","hashOfConfig":"29"},{"size":1190,"mtime":1727508633830,"results":"45","hashOfConfig":"29"},{"size":439,"mtime":1704981181000,"results":"46","hashOfConfig":"29"},{"size":606,"mtime":1704981181000,"results":"47","hashOfConfig":"29"},{"size":515,"mtime":1727508633829,"results":"48","hashOfConfig":"29"},{"size":267,"mtime":1727508633829,"results":"49","hashOfConfig":"29"},{"size":793,"mtime":1729165160000,"results":"50","hashOfConfig":"29"},{"size":3153,"mtime":1704981181000,"results":"51","hashOfConfig":"29"},{"size":1989,"mtime":1729165491000,"results":"52","hashOfConfig":"29"},{"size":1724,"mtime":1729165459000,"results":"53","hashOfConfig":"29"},{"size":611,"mtime":1727508633829,"results":"54","hashOfConfig":"29"},{"size":1043,"mtime":1729165510000,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ucx62c",{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},"/home/sahil/Student-Record-Management-System/frontend/src/index.js",[],[],"/home/sahil/Student-Record-Management-System/frontend/src/App.js",["148"],[],"import './App.css';\nimport Navbar from './components/Navbar';\nimport Carousel from './components/Carousel'\nimport Footer from './components/Footer'\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport EditProfile from './components/EditProfile';\nimport { useSelector } from 'react-redux';\nimport DashBoard from './components/Dashboard';\nimport { useAuthPersist } from './hooks/useAuthPersist';\nimport { useEffect, useState } from 'react';\nimport CourseSession from './components/CourseSession';\nimport EnrolledSession from './components/EnrolledSession';\nimport MarkAttendance from './components/MarkAttendance';\nimport StudentsInSession from './components/StudentsInSession';\n\nfunction App() {\n  const user = useSelector((state) => state.users.user);\n  const person = useSelector((state) => state.persons.person);\n  const [isLoading, setIsLoading] = useState(true);\n  \n  const checkAuth = useAuthPersist();\n\n  useEffect(() => {\n    const initAuth = async () => {\n      await checkAuth();\n      setIsLoading(false);\n    };\n    initAuth();\n  }, [checkAuth]);\n\n  if (isLoading) {\n    return <div>Loading...</div>; // Or a more sophisticated loading component\n  }\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Navbar />\n        <Carousel/>\n\n        <div className=\"BodyContent\">\n          <Routes>\n            <Route path=\"/\" element={!person ? <Home /> : person.role ? <DashBoard /> : <EditProfile />} />\n            <Route path=\"/login\" element={!person ? <Login /> : <Navigate to=\"/\" />} />\n            <Route path=\"/signup\" element={!person ? <Signup /> : <Navigate to=\"/\" />} />\n            <Route path=\"/edit\" element={<EditProfile />} />\n            <Route path=\"/courseSession\" element={!person ? <Home /> : person.role ? <CourseSession /> : <EditProfile />} />\n            <Route path=\"/enrolledSession\" element={!person ? <Home /> : person.role ? <EnrolledSession /> : <EditProfile />} />\n            <Route path=\"/markAttendance\" element={!person ? <Home /> : person.role ? <MarkAttendance /> : <EditProfile />} />\n            <Route path=\"/studentsInSession\" element={!person ? <Home /> : person.role ? <StudentsInSession /> : <EditProfile />} />\n          </Routes>\n        </div>\n\n        <Footer/>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","/home/sahil/Student-Record-Management-System/frontend/src/Store/index.js",[],[],"/home/sahil/Student-Record-Management-System/frontend/src/dev/index.js",[],[],"/home/sahil/Student-Record-Management-System/frontend/src/components/Carousel.js",[],[],"/home/sahil/Student-Record-Management-System/frontend/src/components/Home.js",["149"],[],"import React from 'react';\nimport iitGoaHostelImage from './static/iitgoa_hostel.png';\nimport login from './static/login.png';\nimport enroll from './static/enroll.png';\nimport attendance from './static/attendance.png';\nimport course from './static/course.png';\nimport session from './static/session.png';\n\n\nconst Home = () => {\n\n    console.log(\"We are reaching Home\");\n    return ( \n        <>\n            <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\" crossOrigin=\"anonymous\"/>\n            <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL\" crossOrigin=\"anonymous\"></script>\n            <div className=\"home\">\n                {/* <div id=\"carouselExampleCaptions\" class=\"carousel slide\">\n\n                    <div class=\"carousel-inner\">\n                        <div class=\"carousel-item active\">\n                        <img src={iitGoaHostelImage} class=\"d-block w-100\" alt=\"...\"/>\n                            <div class=\"carousel-caption d-none d-md-block\">\n                                <h5 style={{ fontSize: '30px', color: '#FFFFFF' }}>IIT Goa</h5>\n                                <p style={{ fontSize: '24px', color: '#FFFFFF' }}>Student Record Management System</p>\n\n                            </div>\n                        </div>\n                    </div>\n    \n                </div> */}\n\n                <div className=\"container\">\n                    <h2 style={{ marginTop: '20px', marginBottom:'15px'}}>How to use our services? -- As a Student</h2>\n                      <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"card\" style={{width: '18rem'}}>\n                                <img src={login} class=\"card-img-top\" alt=\"...\"/>\n                                <div class=\"card-body\">\n                                    <h5 class=\"card-title\">Login</h5>\n                                    <p class=\"card-text\">Log in to your account. If you don't have an account yet, you can create one. We recommend using your institute's roll number as your username.</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"card\" style={{width: '18rem'}}>\n                                <img src={enroll} class=\"card-img-top\" alt=\"...\"/>\n                                <div class=\"card-body\">\n                                    <h5 class=\"card-title\">Enroll</h5>\n                                    <p class=\"card-text\">Enroll in your courses that have been registered on the server. Utilize the verification code provided by the teacher to complete the enrollment process for the course.</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"card\" style={{width: '18rem'}}>\n                                <img src={attendance} class=\"card-img-top\" alt=\"...\"/>\n                                <div class=\"card-body\">\n                                    <h5 class=\"card-title\">Attend</h5>\n                                    <p class=\"card-text\">Mark attendance in the active sessions of your enrolled courses initiated by your course instructor.</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n\n                <div className=\"container\">\n                    <h2 style={{ marginTop: '20px', marginBottom:'15px'}}>How to use our services? -- As a Teacher</h2>\n                      <div class=\"row\">\n                        <div class=\"col-sm\">\n                            <div class=\"card\" style={{width: '18rem'}}>\n                                <img src={login} class=\"card-img-top\" alt=\"...\"/>\n                                <div class=\"card-body\">\n                                    <h5 class=\"card-title\">Login</h5>\n                                    <p class=\"card-text\">Log in to your account or create one if you don't have an existing account. It's preferable to use a username that your students can easily identify you with.</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"card\" style={{width: '18rem'}}>\n                                <img src={course} class=\"card-img-top\" alt=\"...\"/>\n                                <div class=\"card-body\">\n                                    <h5 class=\"card-title\">Register your course</h5>\n                                    <p class=\"card-text\">Register your course on our server and leverage our enhanced and secure record management services. After registration, share your class verification code with your students.</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm\">\n                            <div class=\"card\" style={{width: '18rem'}}>\n                                <img src={session} class=\"card-img-top\" alt=\"...\"/>\n                                <div class=\"card-body\">\n                                    <h5 class=\"card-title\">Create New Session</h5>\n                                    <p class=\"card-text\">Initiate a fresh session for enrolled students, enabling them to mark their attendance.</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n                \n                <div className='container'>\n                <h2 style={{ marginTop: '20px', marginBottom:'15px'}}>What's speacial about us?</h2>\n                <div class=\"row\">\n                    <div className=\"col-sm\" style={{ border: '1px solid rgb(48,48,48)', padding: '15px', margin: '10px' }}>\n                        <h5>User Friendly and Efficient</h5>\n                        <p>Our team of dedicated developers has meticulously crafted an attendance system that seamlessly blends user-friendliness with efficiency. Our system is designed to provide a hassle-free experience, ensuring that users can effortlessly mark their attendance with just a few clicks. Experience the convenience and reliability of our user-friendly, efficient attendance system tailored to meet your needs.</p>\n                    </div>\n                    <div className=\"col-sm\" style={{ border: '1px solid rgb(48,48,48)', padding: '15px', margin: '10px' }}>\n                        <h5>Reliable and Secure</h5>\n                        <p>Employing robust measures, it ensures accuracy while safeguarding against unauthorized proxies. With a keen focus on integrity, our system employs cutting-edge technologies, stringent authentication, and vigilant monitoring, minimizing the possibility of proxy attempts to the greatest extent possible.</p>\n                    </div>\n                    <div className=\"col-sm\" style={{ border: '1px solid rgb(48,48,48)', padding: '15px', margin: '10px' }}>\n                        <h5>Modernisation of Student Record Management System</h5>\n                        <p>Our attendance system is at the forefront of innovation, harnessing the power of cutting-edge technologies such as artificial intelligence and geolocation. Seamlessly integrated, these advanced tools elevate traditional record management to new heights.</p>\n                    </div>\n\n                </div>\n\n                </div>\n\n                {/* <footer class=\"text-center text-lg-start bg-body-tertiary text-muted\">\n\n                <section class=\"\">\n                    <div class=\"row mt-3\"  style={{ backgroundColor: 'rgb(48, 48, 48)' , color: '#fff'}}>\n                        <div class=\"col-md-3 col-lg-4 col-xl-3 mx-auto mb-4\">\n\n                        <h6 class=\"text-uppercase fw-bold mb-4\" style={{ marginTop: '20px', marginBottom:'15px'}}>\n                            <i class=\"fas fa-gem me-3\"></i>IIT Goa\n                        </h6>\n                        <p>\n                        Indian Institute of Technology Goa is an autonomous public university located in Goa. Ever since an IIT was allotted to Goa by the Central government in 2014, the new Indian Institute of Technology at Goa started functioning from July, 2016 in a temporary campus housed at Goa Engineering College.\n                        </p>\n                        </div>\n\n                        <div class=\"col-md-4 col-lg-3 col-xl-3 mx-auto mb-md-0 mb-4\">\n                        <h6 class=\"text-uppercase fw-bold mb-4\" style={{ marginTop: '20px', marginBottom:'15px'}}>Contact</h6>\n                        <p style={{margin:'0', padding:'0'}}><i class=\"fas fa-home me-3\" ></i>Bhausaheb Bandodkar Technical Education Complex,</p>\n                        <p style={{margin:'0', padding:'0'}}><i class=\"fas fa-home me-3\" ></i>Goa Engineering College Campus, Farmagudi, Ponda, Goa </p>\n                        <p style={{marginTop:'0', marginBottom:'1rem'}}><i class=\"fas fa-home me-3\" ></i>403401</p>\n\n                        <p><i class=\"fas fa-phone me-3\"></i>  0832 249 0861</p>\n                        </div>\n                    </div>\n                </section>\n                \n                <div class=\"text-center p-4\" style={{ backgroundColor: 'rgb(48, 48, 40)', color: '#fff' , fontSize: '1.5rem'}}>\n                    © 2023 Copyright: <a class=\"text-reset fw-bold\" href=\"https://iitgoa.ac.in/\">IIT Goa</a>\n                </div>\n                \n                </footer> */}\n\n\n\n\n         </div>\n        </>\n\n     );\n}\n \nexport default Home;","/home/sahil/Student-Record-Management-System/frontend/src/components/Footer.js",[],[],"/home/sahil/Student-Record-Management-System/frontend/src/components/Signup.js",["150","151","152"],[],"import React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport '../styles/formStyle.css';\nimport { useSignup } from \"../hooks/useSignup\";\nimport axios from 'axios';\nimport axiosInstance from '../axios';\n\nconst FormComponent = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    username: '',\n    email: '',\n    password: '',\n    password2: '',\n    role:'False',\n  });\n\n\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const { signup, error, isLoading } = useSignup();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formData);\n    const response=await axiosInstance.post('/Home/username_availability',{rollNumber:formData.username});\n    if(response.data.msg==\"Username already taken\"){\n      alert(response.data.msg);\n    }else{\n      // Check if passwords match\n      if (formData.password !== formData.password2) {\n        alert(\"Passwords do not match!\");\n        return;\n      }\n      await signup(formData);\n      setFormData({\n        name: '',\n        username: '',\n        email: '',\n        password: '',\n        password2: '',\n        role:'False'\n      });\n    }\n\n\n  };\n\n  return (\n    <form className=\"formContainer\" onSubmit={handleSubmit}>\n      <div className=\"form-box\">\n        <h1 className=\"form-head\">SIGNUP</h1>\n        <TextField\n          label=\"Name\"\n          name=\"name\"\n          value={formData.name}\n          onChange={handleChange}\n          fullWidth\n          margin=\"normal\"\n          required\n        />\n        <TextField\n          label=\"Username\"\n          name=\"username\"\n          value={formData.username}\n          onChange={handleChange}\n          fullWidth\n          margin=\"normal\"\n          required\n        />\n        <TextField\n          label=\"Email\"\n          name=\"email\"\n          type=\"email\"\n          value={formData.email}\n          onChange={handleChange}\n          fullWidth\n          margin=\"normal\"\n          required\n        />\n        <TextField\n          label=\"Password\"\n          name=\"password\"\n          type=\"password\"\n          value={formData.password}\n          onChange={handleChange}\n          fullWidth\n          margin=\"normal\"\n          required\n        />\n        <TextField\n          label=\"Confirm Password\"\n          name=\"password2\"\n          type=\"password\"\n          value={formData.password2}\n          onChange={handleChange}\n          fullWidth\n          margin=\"normal\"\n          required\n        />\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n          SIGNUP\n        </Button>\n        {error && <div className=\"error\">{error}</div>}\n      </div>\n    </form>\n  );\n};\n\nexport default FormComponent;\n","/home/sahil/Student-Record-Management-System/frontend/src/components/Navbar.js",[],[],"/home/sahil/Student-Record-Management-System/frontend/src/components/Dashboard.js",["153","154","155","156","157","158","159","160","161","162","163"],[],"import React, {useEffect, useState} from 'react';\nimport '../styles/componentStyle.css';\nimport {Tabs, Tab, ListItemText, Divider, ListItem, List} from '@mui/material';\n// import Tab from '@mui/material/Tab';\n// import Typography from '@mui/material/Typography';\n// import SpeedDial from '@mui/material/SpeedDial';\n// import SpeedDialIcon from '@mui/material/SpeedDialIcon';\n// import SpeedDialAction from '@mui/material/SpeedDialAction';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport {\n    Typography,\n    SpeedDial,\n    SpeedDialIcon,\n    SpeedDialAction,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n    Button,\n    TextField\n} from '@mui/material';\nimport axiosInstance from \"../axios\";\nimport {useSelector} from \"react-redux\";\nimport {json, useNavigate} from \"react-router-dom\";\nimport { red } from '@mui/material/colors';\n\nconst Dashboard = () => {\n\n    const [openSpeedDial, setOpenSpeedDial] = useState(false);\n    const [openDialog, setOpenDialog] = useState(false);\n    const [courseName, setcourseName] = useState(\"\");\n    const [verificationCode, setverificationCode] = useState(\"\");\n    const [courseCode, setcourseCode] = useState(\"\");\n    const [opencourseCode, setopencourseCode] = useState(false);\n    const [del,setDel]=useState(false);\n\n    const person = useSelector((state) => {\n        return state.persons.person;\n    });\n\n    const username_of_person=person.username;\n    const navigate = useNavigate();\n ////////////////////////////////////////////////////////////////////////////// \n    const handleClickCourse = async (item) =>{\n       const name_of_course=item.name;\n       const verification_code_of_course=item.verification_code;\n       const teacher_of_course = item.teacher;\n       await navigate(\"/courseSession\",{state: {name_of_course,username_of_person,teacher_of_course,verification_code_of_course}});\n    }\n\n    const handleClickEnrollCourse = async (item) =>{\n        const name_of_course=item.name;\n        const verification_code_of_course=item.verification_code;\n        const teacher_of_course = item.teacher;\n        await navigate(\"/enrolledSession\",{state: {name_of_course,username_of_person,teacher_of_course,verification_code_of_course}});\n     }\n////////////////////////////////////////////////////////////////////////////////\n\n    const [selectedTab, setSelectedTab] = useState(0);\n\n    const handleTabChange = (event, newValue) => {\n        setSelectedTab(newValue);\n    };\n    const [open, setOpen] = useState(false);\n\n    const handleSpeedDialOpen = () => {\n        setOpen(true);\n    };\n\n    const handleSpeedDialClose = () => {\n        setOpen(false);\n    };\n/////////////////////////////////////////////////////\n    const handleDelVisibility=()=>{\n        setDel(true);\n    };\n\n////////////////////////////////////////////////\n    const [datacreate,setDataCreated]=useState([])\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await axiosInstance.post(\"Home/show_created\", { teacher: person.username });\n                console.log(response);\n                if(response.data.msg===\"No such teacher exist.\"){\n                    alert(response.data.msg);\n                }else{\n                    \n                    const { course_data: courseData } = response.data;\n                    console.log(courseData);\n                    setDataCreated(courseData);\n                }\n            } catch (error) {\n                console.error('Error fetching data Created Courses Data:', error);\n            }\n        };\n\n        fetchData();\n\n    }, []); \n////////////////////////////////////////////////\n\n\n\n////////////////////////////////////////////////\n    const [dataenroll,setDataEnrolled]=useState([])\n\n    useEffect(() => {\n        const fetchDataEnrolled = async () => {\n            try {\n                const response = await axiosInstance.post(\"Home/show_enrolled\", { teacher: person.username });\n                console.log(response);\n\n                const { course_data: courseData } = response.data;\n                console.log(courseData);\n                setDataEnrolled(courseData);\n            } catch (error) {\n                console.error('Error fetching data Enrolled Courses Data:', error);\n            }\n        };\n\n        fetchDataEnrolled();\n\n    }, []); \n////////////////////////////////////////////////\n\n\n\n\n    const handlecourseNameChange = (event) => {\n        setcourseName(event.target.value);\n    };\n\n    const handleverificationCodeChange = (event) => {\n        setverificationCode(event.target.value);\n    };\n    const handlecourseCodeChange = (event) => {\n        setcourseCode(event.target.value);\n    };\n\n////////////////////////////////////////////////////////////\n    const handleActionClick = (name) => {\n\n            handleSpeedDialClose();\n            // Open the dialog when a SpeedDialAction is clicked\n            setOpenDialog(true);\n\n    };\n\n    const handleActionClickCreated = (name) => {\n        if(name==='Delete'){\n            handleSpeedDialClose();\n            handleDelVisibility();\n        }\n        else{\n            \n            handleSpeedDialClose();\n            // Open the dialog when a SpeedDialAction is clicked\n            setOpenDialog(true);\n        }\n    };\n/////////////////////////////////////////////////////////////////////////////////\n\n    const handleDialogClose = () => {\n        setOpenDialog(false);\n    };\n\n\n    // const handleSubmit =async () => {\n    //     // Handle the submitted value (rangeInput) her\n    //    const response = await axiosInstance.post(\"/Home/course\", {name: courseName, teacher:person.username})\n    //     console.log(response)\n    //     handleDialogClose(); // Close the dialog after submitting\n    // };\n\n////////////////////////////////////////////////////////////////////////////\n    const handleSubmit =async () => {\n        // Handle the submitted value (rangeInput) her\n        try{\n            const response = await axiosInstance.post(\"/Home/course\", {name: courseName, teacher:person.username})\n            if(response.data.msg===\"Course Name already taken\"){\n                alert(response.data.msg);\n            }\n            if(response.data.msg===\"Invalid Serializer: Failed to create course\"){\n                alert(response.data.msg);\n            }\n            handleDialogClose(); // Close the dialog after submitting\n        }\n        catch(error){\n            console.error('Error in response from backend from creation of course:', error);\n        }\n\n    };\n\n///////////////////////////////////////////////////////////////////\n\n\n\n\n////////////////////////////////////////////////////////////////////////////\n    const handleSubmitEnrolled =async () => {\n        // Handle the submitted value (rangeInput) her\n        try{\n            const response = await axiosInstance.post(\"/Home/course_registration\", {verification_code_entered: verificationCode, student_id:person.username})\n            if(response.data.msg===\"student_id and verification_code_entered fields are required.\"){\n                alert(response.data.msg);\n            }\n            if(response.data.msg===\"Invalid Verification Code\"){\n                alert(\"Invalid Verification Code\");\n            }\n            if(response.data.msg===\"Student not found.\"){\n                alert(response.data.msg);\n            }\n            if(response.data.msg===\"Invalid courses_list format in student.\"){\n                alert(response.data.msg);\n            }\n            \n            console.log(response)\n            handleDialogClose(); // Close the dialog after submitting\n        }\n        catch(error){\n            console.error('Error in response from backend from creation of course:', error);\n        }\n\n    };\n\n///////////////////////////////////////////////////////////////////\n    const deleteCreatedCourse=async(item)=>{\n        if(item.name==='No courses Created so far'){\n            const response=await axiosInstance.post(\"/Home/delete_course\",{course_name:item.name,verification_code:-1,teacher:\"John Doe\"});\n            if(response.data.msg===\"No such course exist.\"){\n                alert(response.data.msg);\n            } \n            if(response.data.msg===\"Invalid Course Code\"){\n                alert(response.data.msg);\n            }\n            if(response.data.msg===\"Student not found.\"){\n                alert(response.data.msg);\n            }\n            if(response.data.msg===\"Invalid courses_list format in student.\"){\n                alert(response.data.msg);\n            }\n            \n            console.log(response);\n            navigate(\"/\")\n            \n        }else{\n            const response=await axiosInstance.post(\"/Home/delete_course\",{course_name:item.name,verification_code:item.verification_code,teacher:item.teacher});\n            if(response.data.msg===\"No such course exist.\"){\n                alert(response.data.msg);\n            } \n            if(response.data.msg===\"Invalid Course Code\"){\n                alert(response.data.msg);\n            }\n            if(response.data.msg===\"Student not found.\"){\n                alert(response.data.msg);\n            }\n            if(response.data.msg===\"Invalid courses_list format in student.\"){\n                alert(response.data.msg);\n            }            \n            console.log(response);\n            navigate(\"/\")\n\n        }\n    }\n\n\n\n    const actions = [\n        {icon: <AddIcon/>, name: 'Add'},\n        {icon: <DeleteIcon/>, name: 'Delete'},\n    ];\n\n    // const dataenroll = [\n    //     {name: 'CS102', description: 'Software Labs'},\n    //     {name: 'CS210', description: 'Digital Circuits and Labs'},\n    //     {name: 'CS222', description: 'Algorithm Design'}]\n    // const datacreate = [\n    //     {name: 'CS103', description: 'Software Labs'},\n    //     {name: 'CS216', description: 'Digital Circuits and Labs'},\n    //     {name: 'CS224', description: 'Algorithm Design'}]\n    \n    return (\n        <div className=\"dash\">\n            <Tabs\n                value={selectedTab}\n                onChange={handleTabChange}\n                style={{width: '950px'}}\n                TabIndicatorProps={{\n                    style: {\n                        backgroundColor: '#007bff'\n                    },\n                }}\n                sx={{marginBottom: '20px'}}\n            >\n                <Tab label=\"Enrolled\"/>\n                <Tab label=\"Created\"/>\n            </Tabs>\n            {selectedTab === 0 && (\n                <div className='tab-det'>\n                    {/* Content for Tab 1 */}\n                    <List sx={{width: '100%', bgcolor: 'background.paper'}}>\n                        {dataenroll.map((item, index) => (<div className='tile' key={index}>\n                                {index !== 0 && <Divider variant=\"offset\" component=\"li\"/>}\n                                <ListItem alignItems=\"flex-start\" onClick={() => handleClickEnrollCourse(item)}>\n\n                                    <ListItemText\n                                        primary={item.name}\n                                        secondary={\n                                            <React.Fragment>\n                                                <Typography\n                                                    sx={{display: 'inline'}}\n                                                    component=\"span\"\n                                                    variant=\"body2\"\n                                                    color=\"text.primary\"\n                                                >\n\n                                                </Typography>\n                                                {item.teacher}\n                                               \n                                            </React.Fragment>\n                                        }\n                                    />\n                                </ListItem>\n                            </div>\n                        ))}\n                    </List>\n{/********************************Enrolled Speed Dial Changes start************************************************** */}\n                    <div className=\"speed-dial\">\n                       \n                         <SpeedDial\n                            ariaLabel=\"SpeedDial example\"\n                            icon={<SpeedDialIcon/>}\n                            onClose={handleSpeedDialClose}\n                            onOpen={handleSpeedDialOpen}\n                            open={open}\n                            direction=\"up\" // Change direction as needed\n                        >\n                            {actions.map((action) => (\n                                <SpeedDialAction\n                                    key={action.name}\n                                    icon={action.icon}\n                                    tooltipTitle={action.name}\n                                    onClick={() => handleActionClick(action.name)}\n                                />\n                            ))}\n                        // </SpeedDial> \n                    </div>\n                    {/* Dialog for the pop-up */}\n                    <Dialog\n                        open={openDialog}\n                        onClose={handleDialogClose}\n                        aria-labelledby=\"dialog-title\"\n                        aria-describedby=\"dialog-description\"\n                    >\n                        <DialogTitle id=\"dialog-title\">{\"Enroll for the Course\"}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText id=\"dialog-description\">\n                                <TextField\n                                    label=\"Enter Course Verification Code\"\n                                    variant=\"filled\"\n                                    value={verificationCode}\n                                    onChange={handleverificationCodeChange}\n                                    fullWidth\n                                />\n\n\n\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleDialogClose} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button onClick={handleSubmitEnrolled} color=\"primary\">\n                                Submit\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n{/****************************************Enrolled Speed Dial Changes End****************************************** */}\n\n                </div>\n            )}\n            {selectedTab === 1 && (\n                <div className='tab-det'>\n                    {/* Content for Tab 1 */}\n                    <List sx={{width: '100%', bgcolor: 'background.paper'}}>\n                        {datacreate.map((item, index) => (<div className='tile' key={index}>\n                                {index !== 0 && <Divider variant=\"offset\" component=\"li\"/>}\n                                <ListItem alignItems=\"flex-start\" onClick={() => handleClickCourse(item)}>\n                                    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', width: '100%' }}>\n                                        <div>\n                                            <ListItemText\n                                                primary={item.name}\n                                                secondary={\n                                                    <React.Fragment>\n                                                        <Typography\n                                                            sx={{ display: 'inline' }}\n                                                            component=\"span\"\n                                                            variant=\"body2\"\n                                                            color=\"text.primary\"\n                                                        >\n                                                            {item.verification_code}\n                                                        </Typography>\n                                                    </React.Fragment>\n                                                }\n                                            />\n                                        </div>\n                                        {del && <DeleteIcon sx={{ color: red[500] }} onClick={()=>deleteCreatedCourse(item)}/>}\n                                    </div>\n                                </ListItem>\n                            </div>\n                        ))}\n                    </List>\n{/**********************************Created Speed Dial Changes start************************************************ */}\n                    <div className=\"speed-dial\">\n                        <SpeedDial\n                            ariaLabel=\"SpeedDial example\"\n                            icon={<SpeedDialIcon/>}\n                            onClose={handleSpeedDialClose}\n                            onOpen={handleSpeedDialOpen}\n                            open={open}\n                            direction=\"up\" // Change direction as needed\n                        >\n                            {actions.map((action) => (\n                                <SpeedDialAction\n                                    key={action.name}\n                                    icon={action.icon}\n                                    tooltipTitle={action.name}\n                                    onClick={()=>handleActionClickCreated(action.name)}\n                                />\n                            ))}\n                        </SpeedDial>\n                    </div>\n                    {/* Dialog for the pop-up */}\n                    <Dialog\n                        open={openDialog}\n                        onClose={handleDialogClose}\n                        aria-labelledby=\"dialog-title\"\n                        aria-describedby=\"dialog-description\"\n                    >\n                        <DialogTitle id=\"dialog-title\">{\"Create Course\"}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText id=\"dialog-description\">\n                                <TextField\n                                    label=\"Course Name\"\n                                    variant=\"filled\"\n                                    value={courseName}\n                                    onChange={handlecourseNameChange}\n                                    fullWidth\n                                />\n\n\n\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleDialogClose} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button onClick={handleSubmit} color=\"primary\">\n                                Submit\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n{/****************************************Created Speed Dial Changes Ends****************************************** */}\n                </div>\n            )}\n            {/* <div className=\"speed-dial\">\n                <SpeedDial\n                    ariaLabel=\"SpeedDial example\"\n                    icon={<SpeedDialIcon/>}\n                    onClose={handleSpeedDialClose}\n                    onOpen={handleSpeedDialOpen}\n                    open={open}\n                    direction=\"up\" // Change direction as needed\n                >\n                    {actions.map((action) => (\n                        <SpeedDialAction\n                            key={action.name}\n                            icon={action.icon}\n                            tooltipTitle={action.name}\n                            onClick={handleActionClick}\n                        />\n                    ))}\n                </SpeedDial>\n            </div>\n            \n            <Dialog\n                open={openDialog}\n                onClose={handleDialogClose}\n                aria-labelledby=\"dialog-title\"\n                aria-describedby=\"dialog-description\"\n            >\n                <DialogTitle id=\"dialog-title\">{\"Create Course\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"dialog-description\">\n                        <TextField\n                            label=\"Course Name\"\n                            variant=\"filled\"\n                            value={courseName}\n                            onChange={handlecourseNameChange}\n                            fullWidth\n                        />\n\n\n\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleDialogClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleSubmit} color=\"primary\">\n                        Submit\n                    </Button>\n                </DialogActions>\n            </Dialog> */}\n\n        </div>\n    );\n};\n\nexport default Dashboard;\n","/home/sahil/Student-Record-Management-System/frontend/src/components/EditProfile.js",["164","165","166"],[],"import React, {useRef, useState, useEffect} from 'react';\nimport axios from 'axios';\nimport '../css/CameraCapture.css';\nimport {redirect} from 'react-router-dom';\nimport axiosInstance from '../axios';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {personLogin} from \"../Store/Slices/personSlice\";\n\n\n\nconst CameraCapture = () => {\n    const videoRef = useRef();\n    const canvasRef = useRef();\n    const [capturedImage, setCapturedImage] = useState(null);\n    const [student_Id, setStudent_Id] = useState(null);\n    const dispatch = useDispatch();\n    const person = useSelector((state) => {\n        return state.persons.person;\n    });\n\n\n    useEffect(() => {\n        // Set up the video stream\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n            navigator.mediaDevices\n                .getUserMedia({video: true})\n                .then((stream) => {\n                    videoRef.current.srcObject = stream;\n                })\n                .catch((error) => console.error('Error accessing the camera:', error));\n        }\n    }, []);\n\n    const handleCapture = async () => {\n\n       try {\n            const video = videoRef.current;\n            const canvas = canvasRef.current;\n            const context = canvas.getContext('2d');\n\n            // Set canvas dimensions to match video stream\n            canvas.width = video.videoWidth;\n            canvas.height = video.videoHeight;\n\n            // Draw video frame on canvas\n            context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n            // Get image data from canvas\n            const imageData = canvas.toDataURL('image/png');\n\n            // Update captured image state\n            setCapturedImage(imageData);\n            console.log(imageData);\n            setStudent_Id(person.username);\n            const res = await axiosInstance.post(\"/Face_Recog/register_image\", {\n                student_Id,\n                image: imageData,\n            });\n            console.log(res);\n           if (res.status) {\n\n               await axiosInstance.put(`Auth/image_register/${student_Id}`, {\"role\": \"True\"})\n               const response2 =await axiosInstance.get('Auth/profile')\n               dispatch(personLogin(response2.data));\n           }\n        }catch(error) {\n            alert(\"Face Not Found\");\n       }\n\n    };\n\n    return (\n        <div className=\"video-container\">\n            <video ref={videoRef} autoPlay playsInline/>\n            <canvas ref={canvasRef} style={{display: \"none\"}}/>\n            <button onClick={handleCapture}>Capture Image</button>\n        </div>\n    );\n};\nexport default CameraCapture;\n","/home/sahil/Student-Record-Management-System/frontend/src/components/Login.js",["167","168","169","170","171"],[],"import React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport '../styles/formStyle.css';\nimport { NavLink } from 'react-router-dom';\nimport axiosInstance from '../axios';\nimport { useDispatch } from 'react-redux';\nimport { userLogin} from '../Store/Slices/userSlice';\nimport { personLogin} from '../Store/Slices/personSlice';\nimport {useLogin} from \"../hooks/useLogin\";\n\n\n\nconst Login = () => {\n  const dispatch=useDispatch();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: '',\n  });\n  const {error,login,isLoading}=useLogin();\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formData);\n    await login(formData);\n    setFormData({\n      username: '',\n      password: '',\n    });\n  };\n\n  const buttonStyle = {\n    // Add your button style if needed\n  };\n\n  return (\n    <form className=\"formContainer\" onSubmit={handleSubmit}>\n      <div className=\"form-box\">\n        <h1 className=\"form-head\">SIGN IN</h1>\n\n        <TextField\n          label=\"Username\"\n          name=\"username\"\n          type=\"text\"\n          value={formData.username}\n          onChange={handleChange}\n          fullWidth\n          margin=\"normal\"\n          required\n        />\n\n        <TextField\n          label=\"Password\"\n          name=\"password\"\n          type=\"password\"\n          value={formData.password}\n          onChange={handleChange}\n          fullWidth\n          margin=\"normal\"\n          required\n        />\n\n        <NavLink style={{ width: '100%', textDecoration: 'none' }} to=\"/\">\n          <div className=\"forget\">Forget password ?</div>\n        </NavLink>\n\n        <Button style={buttonStyle} type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n          Login\n        </Button>\n\n        {/* Add any error handling if needed */}\n        {/* {error && <div className=\"error\">{error}</div>} */}\n\n        <div className=\"forget\">\n          Don't have an account ?<NavLink style={{ width: '100%', textDecoration: 'none' }} to=\"/signup\"> Create Account</NavLink>\n        </div>\n        {error && <div> error here</div> }\n      </div>\n    </form>\n  );\n};\n\nexport default Login;\n","/home/sahil/Student-Record-Management-System/frontend/src/components/StudentsInSession.js",["172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189"],[],"import React, {useEffect, useState} from 'react';\nimport '../styles/componentStyle.css';\nimport {Tabs, Tab, ListItemText, Divider, ListItem, List} from '@mui/material';\n// import Tab from '@mui/material/Tab';\n// import Typography from '@mui/material/Typography';\n// import SpeedDial from '@mui/material/SpeedDial';\n// import SpeedDialIcon from '@mui/material/SpeedDialIcon';\n// import SpeedDialAction from '@mui/material/SpeedDialAction';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Icon from '@mui/material/Icon';\nimport {\n    Typography,\n    SpeedDial,\n    SpeedDialIcon,\n    SpeedDialAction,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n    Button,\n    TextField\n} from '@mui/material';\nimport axiosInstance from \"../axios\";\nimport {useSelector} from \"react-redux\";\nimport {json, useNavigate} from \"react-router-dom\";\nimport {useLocation} from 'react-router-dom';\n\nconst StudentsInSession = () => {\n\n    const [openSpeedDial, setOpenSpeedDial] = useState(false);\n    const [openDialog, setOpenDialog] = useState(false);\n    const [verificationCode, setverificationCode] = useState(\"\");\n    const [student_name,setStudentName]=useState(\"\");\n    const [student_username,setStudentUserName]=useState(\"\");\n\n\n    \n\n\n\n    const navigate = useNavigate();\n    const location=useLocation();\n    \n    const {name_of_course,username_of_person,date_of_session,lat_of_session,lon_of_session,start_time_of_session,end_time_of_session} = location.state || {};\n\n\n    const [selectedTab, setSelectedTab] = useState(0);\n\n    const handleTabChange = (event, newValue) => {\n        setSelectedTab(newValue);\n    };\n    const [open, setOpen] = useState(false);\n\n    const handleSpeedDialOpen = () => {\n        setOpen(true);\n    };\n\n    const handleSpeedDialClose = () => {\n        setOpen(false);\n    };\n\n\n\n\n\n\n////////////////////////////////////////////////\n    const [studentsMarked,setStudentsMarked]=useState([])\n\n    // useEffect(() => {\n        const fetchStudentsMarked = async () => {\n            try {\n                const response = await axiosInstance.post(\"Home/show_students_in_session\", { course_name:name_of_course, date:date_of_session,start_time:start_time_of_session,end_time:end_time_of_session,lat:lat_of_session,lon:lon_of_session });\n                if(response.data.msg===\"course_name, date, start_time, and end_time fields are required.\"){\n                    alert(response.data.msg);\n                }\n                else if(response.data.msg===\"Session not found.\"){\n                    alert(response.data.msg);\n                }\n                else if(response.data.msg===\"Attendance records not found.\"){\n                    alert(response.data.msg);\n                }\n                else{\n                    const { course_data: courseData } = response.data;\n                    setStudentsMarked(courseData);\n                }\n\n\n            } catch (error) {\n                console.error('Error fetching data Students in session data:', error);\n            }\n        };\n\n        fetchStudentsMarked();\n\n    // }, []); \n////////////////////////////////////////////////\n\n\n\n    const handleverificationCodeChange = (event) => {\n        setverificationCode(event.target.value);\n    };\n\n    const handleStudentName = (event) => {\n        setStudentName(event.target.value);\n    };\n\n    const handleStudentUserName = (event) => {\n        setStudentUserName(event.target.value);\n    };\n\n\n    const handleActionClick = () => {\n        handleSpeedDialClose();\n        // Open the dialog when a SpeedDialAction is clicked\n        setOpenDialog(true);\n    };\n\n    const handleDialogClose = () => {\n        setOpenDialog(false);\n    };\n\n\n    // const handleSubmit =async () => {\n    //     // Handle the submitted value (rangeInput) her\n    //    const response = await axiosInstance.post(\"/Home/course\", {name: courseName, teacher:person.username})\n    //     console.log(response)\n    //     handleDialogClose(); // Close the dialog after submitting\n    // };\n\n\n\n\n\n\n////////////////////////////////////////////////////////////////////////////\n    const handleSubmitEnrolled =async () => {\n        // Handle the submitted value (rangeInput) her\n        try{\n            const response = await axiosInstance.post(\"/Home/attendance\", {course_name:name_of_course,date:date_of_session,start_time:start_time_of_session, end_time:end_time_of_session,lat:lat_of_session,lon:lon_of_session, student_Id:student_username})\n            if(response.data.msg===\"Person is not enrolled in the course.\"){\n                alert(response.data.msg);\n            }\n            console.log(response)\n            handleDialogClose(); // Close the dialog after submitting\n        }\n        catch(error){\n            console.error('Error in response from backend from creation of course:', error);\n        }\n\n    };\n\n///////////////////////////////////////////////////////////////////\n    const actions = [\n        // {icon: <AddIcon/>, name: 'Add'},\n        {icon: <EditIcon/>, name: 'Edit'},\n        // {icon: <DeleteIcon/>, name: 'Delete'},\n    ];\n\n    // const dataenroll = [\n    //     {name: 'CS102', description: 'Software Labs'},\n    //     {name: 'CS210', description: 'Digital Circuits and Labs'},\n    //     {name: 'CS222', description: 'Algorithm Design'}]\n    // const datacreate = [\n    //     {name: 'CS103', description: 'Software Labs'},\n    //     {name: 'CS216', description: 'Digital Circuits and Labs'},\n    //     {name: 'CS224', description: 'Algorithm Design'}]\n    \n    return (\n        <div className=\"dash\">\n            <Tabs\n                value={selectedTab}\n                onChange={handleTabChange}\n                style={{width: '950px'}}\n                TabIndicatorProps={{\n                    style: {\n                        backgroundColor: '#007bff'\n                    },\n                }}\n                sx={{marginBottom: '20px'}}\n            >\n                <Tab label=\"Attendance\"/>\n            </Tabs>\n            {selectedTab === 0 && (\n                <div className='tab-det'>\n                    {/* Content for Tab 1 */}\n                    <List sx={{width: '100%', bgcolor: 'background.paper'}}>\n                        {studentsMarked.map((item, index) => (<div className='tile' key={index}>\n                                {index !== 0 && <Divider variant=\"offset\" component=\"li\"/>}\n                                <ListItem alignItems=\"flex-start\">\n\n                                    <ListItemText\n                                        primary={item.name}\n                                        secondary={\n                                            <React.Fragment>\n                                                <Typography\n                                                    sx={{display: 'inline'}}\n                                                    component=\"span\"\n                                                    variant=\"body2\"\n                                                    color=\"text.primary\"\n                                                >\n\n                                                </Typography>\n                                                {item.rollNumber}\n                                            </React.Fragment>\n                                        }\n                                    />\n                                </ListItem>\n                            </div>\n                        ))}\n                    </List>\n{/********************************Enrolled Speed Dial Changes start************************************************** */}\n                    <div className=\"speed-dial\">\n                        <EditIcon onClick={handleActionClick}/>\n                    </div>\n                    {/* Dialog for the pop-up */}\n                    <Dialog\n                        open={openDialog}\n                        onClose={handleDialogClose}\n                        aria-labelledby=\"dialog-title\"\n                        aria-describedby=\"dialog-description\"\n                    >\n                        <DialogTitle id=\"dialog-title\">{\"Mark Attendance\"}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText id=\"dialog-description\">\n                                <TextField\n                                    label=\"Enter Student's Name\"\n                                    variant=\"filled\"\n                                    value={student_name}\n                                    onChange={handleStudentName}\n                                    fullWidth\n                                />\n\n                                <TextField\n                                    label=\"Enter the username\"\n                                    variant=\"filled\"\n                                    value={student_username}\n                                    onChange={handleStudentUserName}\n                                    fullWidth\n                                />\n\n\n\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleDialogClose} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button onClick={handleSubmitEnrolled} color=\"primary\">\n                                Submit\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </div>\n            )}\n\n        </div>\n    );\n};\n\nexport default StudentsInSession;\n","/home/sahil/Student-Record-Management-System/frontend/src/components/CourseSession.js",["190","191","192","193","194","195","196","197","198","199","200","201","202","203"],[],"import React, {useEffect, useState} from 'react';\nimport '../styles/componentStyle.css';\nimport {Tabs, Tab, ListItemText, Divider, ListItem, List} from '@mui/material';\n// import Tab from '@mui/material/Tab';\n// import Typography from '@mui/material/Typography';\n// import SpeedDial from '@mui/material/SpeedDial';\n// import SpeedDialIcon from '@mui/material/SpeedDialIcon';\n// import SpeedDialAction from '@mui/material/SpeedDialAction';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { PieChart } from '@mui/x-charts/PieChart';\nimport { red } from '@mui/material/colors';\nimport {\n    Typography,\n    SpeedDial,\n    SpeedDialIcon,\n    SpeedDialAction,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n    Button,\n    TextField,\n\n} from '@mui/material';\n// import { TimePicker } from '@mui/x-date-pickers';\n\nimport axiosInstance from \"../axios\";\nimport {useSelector} from \"react-redux\";\nimport {json, useNavigate} from \"react-router-dom\";\nimport {useLocation} from 'react-router-dom';\n\nconst CourseSession = () => {\n\n    const [openSpeedDial, setOpenSpeedDial] = useState(false);\n    const [openDialog, setOpenDialog] = useState(false);\n    // const [courseName, setcourseName] = useState(\"\");\n    // const [verificationCode, setverificationCode] = useState(\"\");\n\n    //Need to take the date and location automatically, no need for user to enter them, just for temporary purposes\n    const [date, setDate] = useState(\"\");\n    const [start_time, setStartTime] = useState(\"\");\n    const [end_time, setEndTime] = useState(\"\");\n    const [lat, setLat] = useState(0.0);\n    const [lon, setLon] = useState(0.0);\n    const [radius_of_session,setRadiusOfSession]=useState(0.0);\n\n    \n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    \n    // const [courseCode, setcourseCode] = useState(\"\");\n    // const [opencourseCode, setopencourseCode] = useState(false);\n    \n    const location=useLocation();\n    \n    const {name_of_course,username_of_person,teacher_of_course,verification_code_of_course} = location.state || {};\n    console.log(name_of_course);\n    \n    const person = useSelector((state) => {\n        return state.persons.person;\n    });\n    \n    const navigate = useNavigate();\n    \n    const handleClickSession =(item) =>{\n\n        const name_of_course=item.course_name;\n        const date_of_session=item.date;\n        const lat_of_session=item.lat;\n        const lon_of_session=item.lon;\n        const start_time_of_session=item.start_time;\n        const end_time_of_session=item.end_time;\n        navigate(\"/studentsInSession\",{state: {name_of_course,username_of_person,date_of_session,lat_of_session,lon_of_session,start_time_of_session,end_time_of_session}});\n    }\n    \n    \n    const [selectedTab, setSelectedTab] = useState(0);\n    \n    const handleTabChange = (event, newValue) => {\n        setSelectedTab(newValue);\n    };\n    const [open, setOpen] = useState(false);\n\n    const handleSpeedDialOpen = () => {\n        setOpen(true);\n    };\n    \n    const handleSpeedDialClose = () => {\n        setOpen(false);\n    };\n    \n    \n    \n    \n    \n    ////////////////////////////////////////////////\n    const [datasessions,setDataSessions]=useState([])\n    \n    useEffect(() => {\n        const fetchDataSession = async () => {\n            try {\n                const response = await axiosInstance.post(\"Home/show_sessions\", { course_name: name_of_course,student_username: username_of_person });\n                console.log(response);\n                if(response.data.msg===\"course_name field is required.\"){\n                    alert(response.data.msg);\n                }else if(response.data.msg===\"No such course exist.\"){\n                    alert(response.data.msg);\n                } \n                \n                else{\n\n                    const { course_data: courseData } = response.data;\n                    console.log(courseData);\n                    setDataSessions(courseData);\n                }\n            } catch (error) {\n                console.error('Error fetching data Sessions:', error);\n            }\n        };\n        \n        fetchDataSession();\n        \n    }, []); \n    ////////////////////////////////////////////////\n    \n    const [studentList, setStudentList]=useState([]);\n    useEffect(() => {\n        const fetchDataStudents= async () => {\n            try {\n                const response = await axiosInstance.post(\"Home/show_students\", { course_name: name_of_course });\n                console.log(response);\n                if(response.data.msg===\"No such course exist.\"){\n                    alert(response.data.msg);\n                }else{\n\n                    const { course_data: courseData } = response.data;\n                    console.log(courseData);\n                    setStudentList(courseData);\n                }\n            } catch (error) {\n                console.error('Error fetching data Sessions:', error);\n            }\n        };\n        \n        fetchDataStudents();\n        \n    }, []); \n    ////////////////////////////////////////////////\n\n\n    // const handlecourseNameChange = (event) => {\n    //     setcourseName(event.target.value);\n    // };\n\n//////////////////////////////////////////////////////////////////////\n    const handleDate = (event) => {\n        setDate(event.target.value);\n    };\n\n    const handleStartTime = (event) => {\n        setStartTime(event.target.value);\n    };\n\n    const handleEndTime = (event) => {\n        setEndTime(event.target.value);\n    };\n\n    const handleLat = (event) => {\n        setLat(parseFloat(event.target.value));\n    }; \n\n    const handleLon = (event) => {\n        setLon(parseFloat(event.target.value));\n    }; \n\n    const handleRadius = (event) => {\n        setRadiusOfSession(parseFloat(event.target.value));\n    }; \n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n\n//%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Need to be corrected later%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%5//\nuseEffect(() => {\n    // Get user's location\n        navigator.geolocation.getCurrentPosition(\n            function (position) {\n            const userLat = position.coords.latitude;\n            const userLon = position.coords.longitude;\n            console.log(\"Hello for teacher coords\");\n            console.log(userLat);\n            console.log(userLon);\n            setLat(userLat);\n            setLon(userLon);\n            // setLoading(false);\n            },\n            function (error) {\n            console.error(\"Error getting user's location:\", error);\n            }\n        );\n\n\n\n}, []);\n\n    \n//%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%5//\n\n////////////////////////////////////////////////////////////\n    const [del,setDel]=useState(false);\n\n    const handleDelVisibility=()=>{\n        setDel(true);\n    };\n\n    const handleActionClick= (name) => {\n        if(name==='Delete'){\n            handleSpeedDialClose();\n            handleDelVisibility();\n        }\n        else{\n            \n            handleSpeedDialClose();\n            // Open the dialog when a SpeedDialAction is clicked\n            setOpenDialog(true);\n        }\n    };\n////////////////////////////////////////////////////////////\n\n    const handleDialogClose = () => {\n        setOpenDialog(false);\n    };\n\n\n    // const handleSubmit =async () => {\n    //     // Handle the submitted value (rangeInput) her\n    //    const response = await axiosInstance.post(\"/Home/course\", {name: courseName, teacher:person.username})\n    //     console.log(response)\n    //     handleDialogClose(); // Close the dialog after submitting\n    // };\n\n\n\n\n\n////////////////////////////////////////////////////////////////////////////\n    const handleSubmitSession =async () => {\n        // Handle the submitted value (rangeInput) her\n        try{\n \n            const response = await axiosInstance.post(\"/Home/create\", {course_name:name_of_course,date:date,start_time:start_time,end_time:end_time,lat:lat,lon:lon})\n            // console.log(response)\n            if(response.data.msg===\"Failed to create session\"){\n                alert(response.data.msg);\n            }\n            if(response.data.msg===\"Session Already exists\"){\n                alert(response.data.msg);\n            }\n            handleDialogClose(); // Close the dialog after submitting\n        }\n        catch(error){\n            console.error('Error in response from backend of course in session page:', error);\n        }\n\n    };\n\n///////////////////////////////////////////////////////////////////\n\nconst deleteCreatedCourse=async(item)=>{\n\n        const response=await axiosInstance.post(\"/Home/delete_session\",{course_name:item.course_name,date:item.date,start_time:item.start_time,end_time:item.end_time,lat:item.lat,lon:item.lon});\n        if(response.data.msg===\"No such session exist.\"){\n            alert(response.data.msg);\n        } \n        if(response.data.msg===\"Invalid Course Code\"){\n            alert(response.data.msg);\n        }\n        if(response.data.msg===\"Student not found.\"){\n            alert(response.data.msg);\n        }\n        if(response.data.msg===\"Invalid courses_list format in student.\"){\n            alert(response.data.msg);\n        }\n        console.log(response);\n        navigate(\"/\")\n\n}\n//////////////////////////////////////////////////////////////////\n    const actions = [\n        {icon: <AddIcon/>, name: 'Add'},\n        {icon: <DeleteIcon/>, name: 'Delete'},\n    ];\n\n\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n    // // {\"num_enrolled\":number_enrolled_students,\"num_sessions\":number_sessions,\"avg_rate\":average_attendance_rate,\"max_session_date\":session.date,\"start_time\":session.start_time,\"end_time\":session.end_time}\n    // const [course_stats,setCourseStats]=useState({\"num_enrolled\":0,\n    //                                               \"num_sessions\":0,\n    //                                               \"avg_rate\":0,\n    //                                               \"max_session_date\":\"No such session\",\n    //                                               \"start_time\":\"00:00\",\n    //                                               \"end_time\":\"00:00\"});\n    // const [attendance_rate,setAttendanceRate]=useState(0.0);\n\n    // useEffect(() => {  \n    //     const fetchDataCourseStats= async () => {  \n    //         const response=await axiosInstance.post(\"/Home/course_stats\",{course_name:name_of_course,verification_code:verification_code_of_course})\n    //         setCourseStats({num_enrolled:response.data.num_enrolled,\n    //                         num_sessions:response.data.num_sessions,\n    //                         avg_rate:response.data.avg_rate,\n    //                         max_session_date:response.data.max_session_date,\n    //                         start_time:response.data.start_time,\n    //                         end_time:response.data.end_time})\n    //     }\n\n    //     fetchDataCourseStats();\n\n    //     if(parseFloat(course_stats.num_enrolled)!==0){\n    \n    //         setAttendanceRate(parseFloat(course_stats.avg_rate)/parseFloat(course_stats.num_enrolled));\n    //     }\n    // }, []); \n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n    return (\n        <div className=\"dash\">\n                {/* <div style={{ display: 'flex', flexDirection: 'column', backgroundColor: '#F2F2F2', padding: '20px' }}>\n                    <div style={{ width: '100%', marginBottom: '20px' }}>\n                        <p>Course Name: {name_of_course}</p>\n                        <p>Teacher: {teacher_of_course}</p>\n                        <p>Verification Code:{verification_code_of_course}</p>\n\n                    </div>\n\n                    <div style={{ width: '100%', display: 'flex', alignItems: 'center' }}>\n                        <div style={{ flex: '1 1 50%' }}>\n                            <p>Enrolled Students: {course_stats.num_enrolled}</p>\n                            <p>Total Sessions: {course_stats.num_sessions}</p>\n                            <p>Session with max Attendance Rate: {course_stats.date}</p>\n                            <p>Start Time:{course_stats.start_time}</p>\n                            <p>End Time:{course_stats.end_time}</p>\n                        </div>\n                        <div style={{ flex: '1 1 50%' }}>\n                            <PieChart\n                                series={[\n                                    {\n                                    data: [\n                                        { id: 0, value: attendance_rate, label: 'Present' },\n                                        { id: 1, value: 100-attendance_rate, label: 'Absent' }\n                                    ],\n                                    },\n                                ]}\n                                width={100}\n                                height={100}\n                            />\n                        </div>\n                    </div>\n\n                </div> */}\n                <Tabs\n                value={selectedTab}\n                onChange={handleTabChange}\n                style={{width: '950px'}}\n                TabIndicatorProps={{\n                    style: {\n                        backgroundColor: '#007bff'\n                    },\n                }}\n                sx={{marginBottom: '20px'}}\n                >\n                <Tab label=\"Sessions\"/>\n                <Tab label=\"Enrolled Students\"/>\n\n                </Tabs>\n                {selectedTab === 0 && (\n                <div className='tab-det'>\n                    {/* Content for Tab 1 */}\n                    <List sx={{width: '100%', bgcolor: 'background.paper'}}>\n                        {datasessions.map((item, index) => (<div className='tile' key={index}>\n                                {index !== 0 && <Divider variant=\"offset\" component=\"li\"/>}\n                                <ListItem alignItems=\"flex-start\"  onClick={() => handleClickSession(item)}>\n                                 <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', width: '100%' }}>\n                                        <div>\n                                            <ListItemText\n                                                primary={item.date}\n                                                secondary={\n                                                    <React.Fragment>\n                                                        <Typography\n                                                            sx={{display: 'inline'}}\n                                                            component=\"span\"\n                                                            variant=\"body2\"\n                                                            color=\"text.primary\"\n                                                        >\n\n                                                        </Typography>\n                                                        From {item.start_time} to {item.end_time}\n                                                    </React.Fragment>\n                                                }\n                                            />\n                                        </div>\n                                        {del && <DeleteIcon sx={{ color: red[500] }} onClick={()=>deleteCreatedCourse(item)}/>}\n                                    </div>\n                                </ListItem>\n                            </div>\n                        ))}\n                    </List>\n                {/********************************Enrolled Speed Dial Changes start************************************************** */}\n                    <div className=\"speed-dial\">\n                      {/* <AddRoundedIcon color=\"primary\" onClick={handleActionClick} sx={{ fontSize: 40 }}/> */}\n                        <SpeedDial\n                            ariaLabel=\"SpeedDial example\"\n                            icon={<SpeedDialIcon/>}\n                            onClose={handleSpeedDialClose}\n                            onOpen={handleSpeedDialOpen}\n                            open={open}\n                            direction=\"up\" // Change direction as needed\n                        >\n                            {actions.map((action) => (\n                                <SpeedDialAction\n                                    key={action.name}\n                                    icon={action.icon}\n                                    tooltipTitle={action.name}\n                                    onClick={()=>handleActionClick(action.name)}\n                                />\n                            ))}\n                        </SpeedDial>\n                    </div>\n                    {/* Dialog for the pop-up */}\n                    <Dialog\n                        open={openDialog}\n                        onClose={handleDialogClose}\n                        aria-labelledby=\"dialog-title\"\n                        aria-describedby=\"dialog-description\"\n                    >\n                        <DialogTitle id=\"dialog-title\">{\"Create New Session\"}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText id=\"dialog-description\">\n                                <TextField\n                                    label=\"Select Date\"\n                                    type=\"date\"\n                                    value={date}\n                                    onChange={handleDate}\n                                    fullWidth\n                                    InputLabelProps={{\n                                        shrink: true, // Moves the label outside when there's a value\n                                    }}\n                                    style={{ marginTop: '16px',marginBottom: '16px' }}\n                                />\n                                <TextField\n                                    label=\"Select Start Time\"\n                                    type=\"time\"\n                                    value={start_time}\n                                    onChange={handleStartTime}\n                                    fullWidth\n                                    InputLabelProps={{\n                                        shrink: true, // Moves the label outside when there's a value\n                                    }}\n                                    style={{marginBottom: '16px' }}\n                                />                                \n                                <TextField\n                                    label=\"Select End Time\"\n                                    type=\"time\"\n                                    value={end_time}\n                                    onChange={handleEndTime}\n                                    fullWidth\n                                    InputLabelProps={{\n                                        shrink: true, // Moves the label outside when there's a value\n                                    }}\n                                    style={{marginBottom: '16px' }}\n                                /> \n{/* \n                                <TextField\n                                    label=\"Enter Radius\"\n                                    type='float'\n                                    value={radius_of_session}\n                                    onChange={handleRadius}\n                                    fullWidth\n                                    InputLabelProps={{\n                                        shrink: true, // Moves the label outside when there's a value\n                                    }}\n                                    style={{marginBottom: '16px' }}\n                                />   */}\n\n\n\n                            </DialogContentText>\n                            \n\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleDialogClose} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button onClick={handleSubmitSession} color=\"primary\">\n                                Submit\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                {/****************************************Enrolled Speed Dial Changes End****************************************** */}\n                </div>\n                )} \n                {selectedTab === 1 && (\n                <div className='tab-det'>\n                    {/* Content for Tab 1 */}\n                    <List sx={{width: '100%', bgcolor: 'background.paper'}}>\n                        {studentList.map((item, index) => (<div className='tile' key={index}>\n                                {index !== 0 && <Divider variant=\"offset\" component=\"li\"/>}\n                                <ListItem alignItems=\"flex-start\">\n\n                                    <ListItemText\n                                        primary={item.name}\n                                        secondary={\n                                            <React.Fragment>\n                                                <Typography\n                                                    sx={{display: 'inline'}}\n                                                    component=\"span\"\n                                                    variant=\"body2\"\n                                                    color=\"text.primary\"\n                                                >\n\n                                                </Typography>\n                                                {item.rollNumber}\n                                            </React.Fragment>\n                                        }\n                                    />\n                                </ListItem>\n                            </div>\n                        ))}\n                    </List>\n\n                </div>\n                )} \n\n        </div>\n      );\n      \n};\n\nexport default CourseSession;\n\n","/home/sahil/Student-Record-Management-System/frontend/src/components/EnrolledSession.js",["204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234"],[],"/home/sahil/Student-Record-Management-System/frontend/src/components/MarkAttendance.js",["235","236","237","238","239","240"],[],"import React, {useRef, useState, useEffect} from 'react';\nimport axios from 'axios';\nimport '../css/CameraCapture.css';\nimport {redirect} from 'react-router-dom';\nimport axiosInstance from '../axios';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {personLogin} from \"../Store/Slices/personSlice\";\n\n\nimport {json, useNavigate} from \"react-router-dom\";\nimport {useLocation} from 'react-router-dom';\n\n\n\nconst MarkAttendance = () => {\n    const videoRef = useRef();\n    const canvasRef = useRef();\n    const [capturedImage, setCapturedImage] = useState(null);\n    const [student_Id, setStudent_Id] = useState(null);\n    const dispatch = useDispatch();\n    const navigate=useNavigate();\n    \n    const person = useSelector((state) => {\n        return state.persons.person;\n    });\n\n\n    const location=useLocation();\n    \n    const {name_of_course,username_of_person,date_of_session,lat_of_session,lon_of_session,start_time_of_session,end_time_of_session} = location.state || {};\n\n    useEffect(() => {\n        // Set up the video stream\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n            navigator.mediaDevices\n                .getUserMedia({video: true})\n                .then((stream) => {\n                    videoRef.current.srcObject = stream;\n                })\n                .catch((error) => console.error('Error accessing the camera:', error));\n        }\n    }, []);\n\n    const handleCapture = async () => {\n\n       try {\n            const video = videoRef.current;\n            const canvas = canvasRef.current;\n            const context = canvas.getContext('2d');\n\n            // Set canvas dimensions to match video stream\n            canvas.width = video.videoWidth;\n            canvas.height = video.videoHeight;\n\n            // Draw video frame on canvas\n            context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n            // Get image data from canvas\n            const imageData = canvas.toDataURL('image/png');\n\n            // Update captured image state\n            setCapturedImage(imageData);\n            console.log(imageData);\n            setStudent_Id(person.username);\n            const res = await axiosInstance.post(\"/Face_Recog/image_verification\", {\n                student_Id,\n                image: imageData,\n            });\n            if (res.data.message === \"success\") {\n                const sol=await axiosInstance.post(\"/Home/attendance\",{student_Id:username_of_person,course_name:name_of_course,date:date_of_session,lat:lat_of_session,lon:lon_of_session,start_time:start_time_of_session,end_time:end_time_of_session})\n                if(sol.data.msg===\"Course not found.\"){\n                    alert(sol.data.msg);\n                }\n                if(sol.data.msg===\"Invalid sessions_list format in course.\"){\n                    alert(sol.data.msg);\n                }\n                if(sol.data.msg===\"Serializer Error in marking attendance.\"){\n                    alert(sol.data.msg);\n                }\n                await navigate(\"/\");\n            } else {\n                // If it's a failure, show an alert\n                alert(res.data.message);\n                await navigate(\"/markAttendance\")\n                // You can handle failure in another way, e.g., showing an error message\n                // Or taking a different action based on your application's logic\n            }\n            \n        }catch(error) {\n            alert(error);\n        }\n\n    };\n\n    return (\n        <div className=\"video-container\">\n            <video ref={videoRef} autoPlay playsInline/>\n            <canvas ref={canvasRef} style={{display: \"none\"}}/>\n            <button onClick={handleCapture}>Capture Image</button>\n        </div>\n    );\n};\nexport default MarkAttendance;\n","/home/sahil/Student-Record-Management-System/frontend/src/hooks/useVerifyUser.js",[],[],"/home/sahil/Student-Record-Management-System/frontend/src/Store/Slices/userSlice.js",[],[],"/home/sahil/Student-Record-Management-System/frontend/src/Store/Slices/personSlice.js",[],[],"/home/sahil/Student-Record-Management-System/frontend/src/dev/useInitial.js",["241"],[],"/home/sahil/Student-Record-Management-System/frontend/src/dev/previews.jsx",[],[],"/home/sahil/Student-Record-Management-System/frontend/src/hooks/useLogout.js",[],[],"/home/sahil/Student-Record-Management-System/frontend/src/hooks/useSignup.js",["242","243","244","245"],[],"import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { userLogin} from '../Store/Slices/userSlice';\nimport { personLogin} from '../Store/Slices/personSlice';\nimport axiosInstance from \"../axios\";\nimport {json, useNavigate} from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport const useSignup=()=>{\n    const [error,setError]=useState(null);\n    const [isLoading,setIsLoading]=useState(null);\n    const dispatch=useDispatch();\n    \n    \n    const signup=async (formData)=>{\n        const {name,email,username:rollNumber}=formData;\n        setIsLoading(true);\n        setError(null);\n        // console.log(rollNumber)\n        try {\n            console.log(\"heelo\");\n            console.log(formData);\n            const response = await axiosInstance.post('Auth/register', formData);\n            console.log(response);\n            await axiosInstance.post('/Home/student',{name,email,rollNumber});\n            // if(response.data.msg==='Username already taken'){\n            //     alert(response.data.msg);\n            //     setError()\n            // }\n            console.log('Signup response:', response.data);\n            localStorage.setItem('access_token',response.data['token']['access']);\n            localStorage.setItem('refresh_token', response.data['token']['refresh']);\n            axiosInstance.defaults.headers['Authorization'] = 'Bearer '+ localStorage.getItem('access_token');\n            console.log('Bearer '+ localStorage.getItem('access_token'));\n            const response1 = await axiosInstance.get('Auth/profile')\n            console.log(response1.data)\n            dispatch(personLogin(response1.data));\n        }catch (error) {\n            console.log('Register Error', error);\n            setError(error);\n        }\n        setIsLoading(false);\n        // const response = await fetch('/api/user/signup',{\n        //     method: 'POST',\n        //     headers: { 'Content-Type': 'application/json'},\n        //     body: JSON.stringify({email,password})\n        // })\n        // const json=await response.json();\n        // // console.log(json,5456955);\n        // if(!response.ok){\n        //     setIsLoading(false);\n        //     setError(json.error);\n        // }\n        // if(response.ok){\n        //     const dataresponse = await fetch('/api/data/addperson',{\n        //         method: 'POST',\n        //         headers: { 'Content-Type': 'application/json',\n        //         'Authorization': `Bearer ${json.email} ${json.token}`},\n        //         body: JSON.stringify({name,email})\n        //     })\n        //\n        //     const datajson=await dataresponse.json();\n        //     // console.log(datajson,5698);\n        //     if(!dataresponse.ok){\n        //         setIsLoading(false);\n        //         setError(datajson.error);\n        //     }\n        //     if(dataresponse.ok){\n        //         localStorage.setItem('user', JSON.stringify(json));\n        //         setIsLoading(false);\n        //         dispatch(userLogin(json));\n        //         dispatch(personLogin(datajson));\n        //     }\n        // }\n    }\n    return {signup,isLoading,error};\n}","/home/sahil/Student-Record-Management-System/frontend/src/hooks/useLogin.js",[],[],"/home/sahil/Student-Record-Management-System/frontend/src/axios.jsx",[],[],"/home/sahil/Student-Record-Management-System/frontend/src/dev/palette.jsx",[],[],"/home/sahil/Student-Record-Management-System/frontend/src/hooks/useAuthPersist.js",["246"],[],"import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { userLogin } from '../Store/Slices/userSlice';\nimport { personLogin } from '../Store/Slices/personSlice';\nimport axiosInstance from \"../axios\";\n\nexport const useAuthPersist = () => {\n    const dispatch = useDispatch();\n\n    const checkAuth = async () => {\n        const accessToken = localStorage.getItem('access_token');\n        if (accessToken) {\n            try {\n                axiosInstance.defaults.headers['Authorization'] = `Bearer ${accessToken}`;\n                const profileResponse = await axiosInstance.get('Auth/profile');\n                \n                dispatch(userLogin({ token: { access: accessToken } }));\n                dispatch(personLogin(profileResponse.data));\n            } catch (error) {\n                console.error('Auth check failed:', error);\n                // Token refresh is handled by axios interceptor\n            }\n        }\n    };\n\n    useEffect(() => {\n        checkAuth();\n    }, []);\n\n    return checkAuth;\n};",{"ruleId":"247","severity":1,"message":"248","line":20,"column":9,"nodeType":"249","messageId":"250","endLine":20,"endColumn":13},{"ruleId":"247","severity":1,"message":"251","line":2,"column":8,"nodeType":"249","messageId":"250","endLine":2,"endColumn":25},{"ruleId":"247","severity":1,"message":"252","line":6,"column":8,"nodeType":"249","messageId":"250","endLine":6,"endColumn":13},{"ruleId":"247","severity":1,"message":"253","line":27,"column":26,"nodeType":"249","messageId":"250","endLine":27,"endColumn":35},{"ruleId":"254","severity":1,"message":"255","line":33,"column":25,"nodeType":"256","messageId":"257","endLine":33,"endColumn":27},{"ruleId":"247","severity":1,"message":"258","line":10,"column":8,"nodeType":"249","messageId":"250","endLine":10,"endColumn":16},{"ruleId":"247","severity":1,"message":"259","line":27,"column":9,"nodeType":"249","messageId":"250","endLine":27,"endColumn":13},{"ruleId":"247","severity":1,"message":"260","line":32,"column":12,"nodeType":"249","messageId":"250","endLine":32,"endColumn":25},{"ruleId":"247","severity":1,"message":"261","line":32,"column":27,"nodeType":"249","messageId":"250","endLine":32,"endColumn":43},{"ruleId":"247","severity":1,"message":"262","line":36,"column":12,"nodeType":"249","messageId":"250","endLine":36,"endColumn":22},{"ruleId":"247","severity":1,"message":"263","line":37,"column":12,"nodeType":"249","messageId":"250","endLine":37,"endColumn":26},{"ruleId":"247","severity":1,"message":"264","line":37,"column":28,"nodeType":"249","messageId":"250","endLine":37,"endColumn":45},{"ruleId":"265","severity":1,"message":"266","line":104,"column":8,"nodeType":"267","endLine":104,"endColumn":10,"suggestions":"268"},{"ruleId":"265","severity":1,"message":"266","line":128,"column":8,"nodeType":"267","endLine":128,"endColumn":10,"suggestions":"269"},{"ruleId":"247","severity":1,"message":"270","line":141,"column":11,"nodeType":"249","messageId":"250","endLine":141,"endColumn":33},{"ruleId":"271","severity":1,"message":"272","line":350,"column":32,"nodeType":"273","messageId":"274","endLine":351,"endColumn":28},{"ruleId":"247","severity":1,"message":"252","line":2,"column":8,"nodeType":"249","messageId":"250","endLine":2,"endColumn":13},{"ruleId":"247","severity":1,"message":"275","line":4,"column":9,"nodeType":"249","messageId":"250","endLine":4,"endColumn":17},{"ruleId":"247","severity":1,"message":"276","line":14,"column":12,"nodeType":"249","messageId":"250","endLine":14,"endColumn":25},{"ruleId":"247","severity":1,"message":"277","line":6,"column":8,"nodeType":"249","messageId":"250","endLine":6,"endColumn":21},{"ruleId":"247","severity":1,"message":"278","line":8,"column":10,"nodeType":"249","messageId":"250","endLine":8,"endColumn":19},{"ruleId":"247","severity":1,"message":"279","line":9,"column":10,"nodeType":"249","messageId":"250","endLine":9,"endColumn":21},{"ruleId":"247","severity":1,"message":"280","line":15,"column":9,"nodeType":"249","messageId":"250","endLine":15,"endColumn":17},{"ruleId":"247","severity":1,"message":"253","line":20,"column":22,"nodeType":"249","messageId":"250","endLine":20,"endColumn":31},{"ruleId":"247","severity":1,"message":"281","line":1,"column":16,"nodeType":"249","messageId":"250","endLine":1,"endColumn":25},{"ruleId":"247","severity":1,"message":"282","line":9,"column":8,"nodeType":"249","messageId":"250","endLine":9,"endColumn":15},{"ruleId":"247","severity":1,"message":"283","line":11,"column":8,"nodeType":"249","messageId":"250","endLine":11,"endColumn":18},{"ruleId":"247","severity":1,"message":"284","line":12,"column":8,"nodeType":"249","messageId":"250","endLine":12,"endColumn":12},{"ruleId":"247","severity":1,"message":"285","line":15,"column":5,"nodeType":"249","messageId":"250","endLine":15,"endColumn":14},{"ruleId":"247","severity":1,"message":"286","line":16,"column":5,"nodeType":"249","messageId":"250","endLine":16,"endColumn":18},{"ruleId":"247","severity":1,"message":"287","line":17,"column":5,"nodeType":"249","messageId":"250","endLine":17,"endColumn":20},{"ruleId":"247","severity":1,"message":"288","line":27,"column":9,"nodeType":"249","messageId":"250","endLine":27,"endColumn":20},{"ruleId":"247","severity":1,"message":"259","line":28,"column":9,"nodeType":"249","messageId":"250","endLine":28,"endColumn":13},{"ruleId":"247","severity":1,"message":"260","line":33,"column":12,"nodeType":"249","messageId":"250","endLine":33,"endColumn":25},{"ruleId":"247","severity":1,"message":"261","line":33,"column":27,"nodeType":"249","messageId":"250","endLine":33,"endColumn":43},{"ruleId":"247","severity":1,"message":"289","line":35,"column":12,"nodeType":"249","messageId":"250","endLine":35,"endColumn":28},{"ruleId":"247","severity":1,"message":"290","line":44,"column":11,"nodeType":"249","messageId":"250","endLine":44,"endColumn":19},{"ruleId":"247","severity":1,"message":"291","line":47,"column":27,"nodeType":"249","messageId":"250","endLine":47,"endColumn":45},{"ruleId":"247","severity":1,"message":"292","line":55,"column":12,"nodeType":"249","messageId":"250","endLine":55,"endColumn":16},{"ruleId":"247","severity":1,"message":"293","line":57,"column":11,"nodeType":"249","messageId":"250","endLine":57,"endColumn":30},{"ruleId":"247","severity":1,"message":"294","line":104,"column":11,"nodeType":"249","messageId":"250","endLine":104,"endColumn":39},{"ruleId":"247","severity":1,"message":"295","line":158,"column":11,"nodeType":"249","messageId":"250","endLine":158,"endColumn":18},{"ruleId":"247","severity":1,"message":"258","line":10,"column":8,"nodeType":"249","messageId":"250","endLine":10,"endColumn":16},{"ruleId":"247","severity":1,"message":"296","line":12,"column":10,"nodeType":"249","messageId":"250","endLine":12,"endColumn":18},{"ruleId":"247","severity":1,"message":"259","line":32,"column":9,"nodeType":"249","messageId":"250","endLine":32,"endColumn":13},{"ruleId":"247","severity":1,"message":"260","line":37,"column":12,"nodeType":"249","messageId":"250","endLine":37,"endColumn":25},{"ruleId":"247","severity":1,"message":"261","line":37,"column":27,"nodeType":"249","messageId":"250","endLine":37,"endColumn":43},{"ruleId":"247","severity":1,"message":"297","line":48,"column":12,"nodeType":"249","messageId":"250","endLine":48,"endColumn":29},{"ruleId":"247","severity":1,"message":"298","line":58,"column":46,"nodeType":"249","messageId":"250","endLine":58,"endColumn":63},{"ruleId":"247","severity":1,"message":"299","line":58,"column":64,"nodeType":"249","messageId":"250","endLine":58,"endColumn":91},{"ruleId":"247","severity":1,"message":"300","line":61,"column":11,"nodeType":"249","messageId":"250","endLine":61,"endColumn":17},{"ruleId":"265","severity":1,"message":"301","line":125,"column":8,"nodeType":"267","endLine":125,"endColumn":10,"suggestions":"302"},{"ruleId":"265","severity":1,"message":"303","line":149,"column":8,"nodeType":"267","endLine":149,"endColumn":10,"suggestions":"304"},{"ruleId":"247","severity":1,"message":"305","line":170,"column":11,"nodeType":"249","messageId":"250","endLine":170,"endColumn":20},{"ruleId":"247","severity":1,"message":"306","line":174,"column":11,"nodeType":"249","messageId":"250","endLine":174,"endColumn":20},{"ruleId":"247","severity":1,"message":"307","line":178,"column":11,"nodeType":"249","messageId":"250","endLine":178,"endColumn":23},{"ruleId":"247","severity":1,"message":"258","line":10,"column":8,"nodeType":"249","messageId":"250","endLine":10,"endColumn":16},{"ruleId":"247","severity":1,"message":"285","line":16,"column":5,"nodeType":"249","messageId":"250","endLine":16,"endColumn":14},{"ruleId":"247","severity":1,"message":"286","line":17,"column":5,"nodeType":"249","messageId":"250","endLine":17,"endColumn":18},{"ruleId":"247","severity":1,"message":"287","line":18,"column":5,"nodeType":"249","messageId":"250","endLine":18,"endColumn":20},{"ruleId":"247","severity":1,"message":"308","line":19,"column":5,"nodeType":"249","messageId":"250","endLine":19,"endColumn":11},{"ruleId":"247","severity":1,"message":"309","line":20,"column":5,"nodeType":"249","messageId":"250","endLine":20,"endColumn":16},{"ruleId":"247","severity":1,"message":"310","line":21,"column":5,"nodeType":"249","messageId":"250","endLine":21,"endColumn":18},{"ruleId":"247","severity":1,"message":"311","line":22,"column":5,"nodeType":"249","messageId":"250","endLine":22,"endColumn":22},{"ruleId":"247","severity":1,"message":"312","line":23,"column":5,"nodeType":"249","messageId":"250","endLine":23,"endColumn":18},{"ruleId":"247","severity":1,"message":"313","line":24,"column":5,"nodeType":"249","messageId":"250","endLine":24,"endColumn":11},{"ruleId":"247","severity":1,"message":"314","line":25,"column":5,"nodeType":"249","messageId":"250","endLine":25,"endColumn":14},{"ruleId":"247","severity":1,"message":"315","line":26,"column":5,"nodeType":"249","messageId":"250","endLine":26,"endColumn":10},{"ruleId":"247","severity":1,"message":"288","line":32,"column":9,"nodeType":"249","messageId":"250","endLine":32,"endColumn":20},{"ruleId":"247","severity":1,"message":"259","line":33,"column":9,"nodeType":"249","messageId":"250","endLine":33,"endColumn":13},{"ruleId":"247","severity":1,"message":"260","line":38,"column":12,"nodeType":"249","messageId":"250","endLine":38,"endColumn":25},{"ruleId":"247","severity":1,"message":"261","line":38,"column":27,"nodeType":"249","messageId":"250","endLine":38,"endColumn":43},{"ruleId":"247","severity":1,"message":"316","line":39,"column":12,"nodeType":"249","messageId":"250","endLine":39,"endColumn":22},{"ruleId":"247","severity":1,"message":"317","line":56,"column":12,"nodeType":"249","messageId":"250","endLine":56,"endColumn":21},{"ruleId":"247","severity":1,"message":"318","line":56,"column":23,"nodeType":"249","messageId":"250","endLine":56,"endColumn":35},{"ruleId":"247","severity":1,"message":"319","line":57,"column":12,"nodeType":"249","messageId":"250","endLine":57,"endColumn":23},{"ruleId":"247","severity":1,"message":"320","line":57,"column":25,"nodeType":"249","messageId":"250","endLine":57,"endColumn":39},{"ruleId":"247","severity":1,"message":"292","line":182,"column":12,"nodeType":"249","messageId":"250","endLine":182,"endColumn":16},{"ruleId":"247","severity":1,"message":"293","line":184,"column":11,"nodeType":"249","messageId":"250","endLine":184,"endColumn":30},{"ruleId":"265","severity":1,"message":"301","line":221,"column":8,"nodeType":"267","endLine":221,"endColumn":10,"suggestions":"321"},{"ruleId":"265","severity":1,"message":"301","line":251,"column":8,"nodeType":"267","endLine":251,"endColumn":10,"suggestions":"322"},{"ruleId":"247","severity":1,"message":"323","line":262,"column":11,"nodeType":"249","messageId":"250","endLine":262,"endColumn":21},{"ruleId":"247","severity":1,"message":"324","line":266,"column":11,"nodeType":"249","messageId":"250","endLine":266,"endColumn":26},{"ruleId":"247","severity":1,"message":"325","line":270,"column":11,"nodeType":"249","messageId":"250","endLine":270,"endColumn":24},{"ruleId":"247","severity":1,"message":"326","line":276,"column":11,"nodeType":"249","messageId":"250","endLine":276,"endColumn":28},{"ruleId":"247","severity":1,"message":"327","line":299,"column":11,"nodeType":"249","messageId":"250","endLine":299,"endColumn":30},{"ruleId":"247","severity":1,"message":"295","line":320,"column":11,"nodeType":"249","messageId":"250","endLine":320,"endColumn":18},{"ruleId":"247","severity":1,"message":"252","line":2,"column":8,"nodeType":"249","messageId":"250","endLine":2,"endColumn":13},{"ruleId":"247","severity":1,"message":"275","line":4,"column":9,"nodeType":"249","messageId":"250","endLine":4,"endColumn":17},{"ruleId":"247","severity":1,"message":"279","line":7,"column":9,"nodeType":"249","messageId":"250","endLine":7,"endColumn":20},{"ruleId":"247","severity":1,"message":"259","line":10,"column":9,"nodeType":"249","messageId":"250","endLine":10,"endColumn":13},{"ruleId":"247","severity":1,"message":"276","line":18,"column":12,"nodeType":"249","messageId":"250","endLine":18,"endColumn":25},{"ruleId":"247","severity":1,"message":"280","line":20,"column":11,"nodeType":"249","messageId":"250","endLine":20,"endColumn":19},{"ruleId":"247","severity":1,"message":"328","line":4,"column":20,"nodeType":"249","messageId":"250","endLine":4,"endColumn":29},{"ruleId":"247","severity":1,"message":"278","line":3,"column":10,"nodeType":"249","messageId":"250","endLine":3,"endColumn":19},{"ruleId":"247","severity":1,"message":"259","line":6,"column":9,"nodeType":"249","messageId":"250","endLine":6,"endColumn":13},{"ruleId":"247","severity":1,"message":"329","line":6,"column":15,"nodeType":"249","messageId":"250","endLine":6,"endColumn":26},{"ruleId":"247","severity":1,"message":"252","line":7,"column":8,"nodeType":"249","messageId":"250","endLine":7,"endColumn":13},{"ruleId":"265","severity":1,"message":"330","line":28,"column":8,"nodeType":"267","endLine":28,"endColumn":10,"suggestions":"331"},"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'iitGoaHostelImage' is defined but never used.","'axios' is defined but never used.","'isLoading' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'EditIcon' is defined but never used.","'json' is defined but never used.","'openSpeedDial' is assigned a value but never used.","'setOpenSpeedDial' is assigned a value but never used.","'courseCode' is assigned a value but never used.","'opencourseCode' is assigned a value but never used.","'setopencourseCode' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'person.username'. Either include it or remove the dependency array.","ArrayExpression",["332"],["333"],"'handlecourseCodeChange' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","putCommentInBraces","'redirect' is defined but never used.","'capturedImage' is assigned a value but never used.","'axiosInstance' is defined but never used.","'userLogin' is defined but never used.","'personLogin' is defined but never used.","'dispatch' is assigned a value but never used.","'useEffect' is defined but never used.","'AddIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'Icon' is defined but never used.","'SpeedDial' is defined but never used.","'SpeedDialIcon' is defined but never used.","'SpeedDialAction' is defined but never used.","'useSelector' is defined but never used.","'verificationCode' is assigned a value but never used.","'navigate' is assigned a value but never used.","'username_of_person' is assigned a value but never used.","'open' is assigned a value but never used.","'handleSpeedDialOpen' is assigned a value but never used.","'handleverificationCodeChange' is assigned a value but never used.","'actions' is assigned a value but never used.","'PieChart' is defined but never used.","'radius_of_session' is assigned a value but never used.","'teacher_of_course' is assigned a value but never used.","'verification_code_of_course' is assigned a value but never used.","'person' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'name_of_course' and 'username_of_person'. Either include them or remove the dependency array.",["334"],"React Hook useEffect has a missing dependency: 'name_of_course'. Either include it or remove the dependency array.",["335"],"'handleLat' is assigned a value but never used.","'handleLon' is assigned a value but never used.","'handleRadius' is assigned a value but never used.","'Dialog' is defined but never used.","'DialogTitle' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogActions' is defined but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'Alert' is defined but never used.","'openDialog' is assigned a value but never used.","'showPopup' is assigned a value but never used.","'setShowPopup' is assigned a value but never used.","'currSession' is assigned a value but never used.","'setCurrSession' is assigned a value but never used.",["336"],["337"],"'handleDate' is assigned a value but never used.","'handleStartTime' is assigned a value but never used.","'handleEndTime' is assigned a value but never used.","'handleActionClick' is assigned a value but never used.","'handleSubmitSession' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'useNavigate' is defined but never used.","React Hook useEffect has a missing dependency: 'checkAuth'. Either include it or remove the dependency array.",["338"],{"desc":"339","fix":"340"},{"desc":"339","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"342","fix":"346"},{"desc":"342","fix":"347"},{"desc":"348","fix":"349"},"Update the dependencies array to be: [person.username]",{"range":"350","text":"351"},{"range":"352","text":"351"},"Update the dependencies array to be: [name_of_course, username_of_person]",{"range":"353","text":"354"},"Update the dependencies array to be: [name_of_course]",{"range":"355","text":"356"},{"range":"357","text":"354"},{"range":"358","text":"354"},"Update the dependencies array to be: [checkAuth]",{"range":"359","text":"360"},[3725,3727],"[person.username]",[4454,4456],[4320,4322],"[name_of_course, username_of_person]",[5175,5177],"[name_of_course]",[8188,8190],[9203,9205],[1013,1015],"[checkAuth]"]