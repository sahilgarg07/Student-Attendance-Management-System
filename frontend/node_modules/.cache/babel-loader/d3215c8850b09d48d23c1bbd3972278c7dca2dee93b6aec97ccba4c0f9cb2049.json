{"ast":null,"code":"var _jsxFileName = \"/home/sahil/Student-Record-Management-System/frontend/src/components/EditProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../css/CameraCapture.css';\nimport { redirect } from 'react-router-dom';\nimport axiosInstance from '../axios';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { personLogin } from \"../Store/Slices/personSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraCapture = () => {\n  _s();\n  const videoRef = useRef();\n  const canvasRef = useRef();\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [student_Id, setStudent_Id] = useState(null);\n  const dispatch = useDispatch();\n  const person = useSelector(state => {\n    return state.persons.person;\n  });\n  useEffect(() => {\n    // Set up the video stream\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(stream => {\n        videoRef.current.srcObject = stream;\n      }).catch(error => console.error('Error accessing the camera:', error));\n    }\n  }, []);\n  const handleCapture = async () => {\n    try {\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n\n      // Set canvas dimensions to match video stream\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n\n      // Draw video frame on canvas\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // Get image data from canvas\n      const imageData = canvas.toDataURL('image/png');\n\n      // Update captured image state\n      setCapturedImage(imageData);\n      console.log(imageData);\n      setStudent_Id(person.username);\n      const res = await axiosInstance.post(\"/Face_Recog/register_image\", {\n        student_Id,\n        image: imageData\n      });\n      console.log(res);\n      if (res.status) {\n        await axiosInstance.put(`Auth/image_register/${student_Id}`, {\n          \"role\": \"True\"\n        });\n        const response2 = await axiosInstance.get('Auth/profile');\n        dispatch(personLogin(response2.data));\n      }\n    } catch (error) {\n      alert(\"Face Not Found\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      playsInline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCapture,\n      children: \"Capture Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(CameraCapture, \"AauzFRSbW7YT4TRZ6orxXs78plQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = CameraCapture;\nexport default CameraCapture;\nvar _c;\n$RefreshReg$(_c, \"CameraCapture\");","map":{"version":3,"names":["React","useRef","useState","useEffect","axios","redirect","axiosInstance","useDispatch","useSelector","personLogin","jsxDEV","_jsxDEV","CameraCapture","_s","videoRef","canvasRef","capturedImage","setCapturedImage","student_Id","setStudent_Id","dispatch","person","state","persons","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","catch","error","console","handleCapture","canvas","context","getContext","width","videoWidth","height","videoHeight","drawImage","imageData","toDataURL","log","username","res","post","image","status","put","response2","get","data","alert","className","children","ref","autoPlay","playsInline","fileName","_jsxFileName","lineNumber","columnNumber","style","display","onClick","_c","$RefreshReg$"],"sources":["/home/sahil/Student-Record-Management-System/frontend/src/components/EditProfile.js"],"sourcesContent":["import React, {useRef, useState, useEffect} from 'react';\nimport axios from 'axios';\nimport '../css/CameraCapture.css';\nimport {redirect} from 'react-router-dom';\nimport axiosInstance from '../axios';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {personLogin} from \"../Store/Slices/personSlice\";\n\n\n\nconst CameraCapture = () => {\n    const videoRef = useRef();\n    const canvasRef = useRef();\n    const [capturedImage, setCapturedImage] = useState(null);\n    const [student_Id, setStudent_Id] = useState(null);\n    const dispatch = useDispatch();\n    const person = useSelector((state) => {\n        return state.persons.person;\n    });\n\n\n    useEffect(() => {\n        // Set up the video stream\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n            navigator.mediaDevices\n                .getUserMedia({video: true})\n                .then((stream) => {\n                    videoRef.current.srcObject = stream;\n                })\n                .catch((error) => console.error('Error accessing the camera:', error));\n        }\n    }, []);\n\n    const handleCapture = async () => {\n\n       try {\n            const video = videoRef.current;\n            const canvas = canvasRef.current;\n            const context = canvas.getContext('2d');\n\n            // Set canvas dimensions to match video stream\n            canvas.width = video.videoWidth;\n            canvas.height = video.videoHeight;\n\n            // Draw video frame on canvas\n            context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n            // Get image data from canvas\n            const imageData = canvas.toDataURL('image/png');\n\n            // Update captured image state\n            setCapturedImage(imageData);\n            console.log(imageData);\n            setStudent_Id(person.username);\n            const res = await axiosInstance.post(\"/Face_Recog/register_image\", {\n                student_Id,\n                image: imageData,\n            });\n            console.log(res);\n           if (res.status) {\n\n               await axiosInstance.put(`Auth/image_register/${student_Id}`, {\"role\": \"True\"})\n               const response2 =await axiosInstance.get('Auth/profile')\n               dispatch(personLogin(response2.data));\n           }\n        }catch(error) {\n            alert(\"Face Not Found\");\n       }\n\n    };\n\n    return (\n        <div className=\"video-container\">\n            <video ref={videoRef} autoPlay playsInline/>\n            <canvas ref={canvasRef} style={{display: \"none\"}}/>\n            <button onClick={handleCapture}>Capture Image</button>\n        </div>\n    );\n};\nexport default CameraCapture;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}