{"ast":null,"code":"var _jsxFileName = \"/home/sahil/Student-Record-Management-System/frontend/src/components/EnrolledSession.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../styles/componentStyle.css';\nimport { Tabs, Tab, ListItemText, Divider, ListItem, List } from '@mui/material';\n// import Tab from '@mui/material/Tab';\n// import Typography from '@mui/material/Typography';\n// import SpeedDial from '@mui/material/SpeedDial';\n// import SpeedDialIcon from '@mui/material/SpeedDialIcon';\n// import SpeedDialAction from '@mui/material/SpeedDialAction';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\n// import AddRoundedIcon from '@mui/icons-material/AddRounded';\nimport { Typography, SpeedDial, SpeedDialIcon, SpeedDialAction, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, TextField, Alert } from '@mui/material';\n// import { TimePicker } from '@mui/x-date-pickers';\n\nimport axiosInstance from \"../axios\";\nimport { useSelector } from \"react-redux\";\nimport { json, useNavigate } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EnrolledSession = () => {\n  _s();\n  const [openSpeedDial, setOpenSpeedDial] = useState(false);\n  const [openDialog, setOpenDialog] = useState(false);\n  // const [courseName, setcourseName] = useState(\"\");\n  // const [verificationCode, setverificationCode] = useState(\"\");\n\n  //Need to take the date and location automatically, no need for user to enter them, just for temporary purposes\n  const [date, setDate] = useState(\"\");\n  const [start_time, setStartTime] = useState(\"\");\n  const [end_time, setEndTime] = useState(\"\");\n  /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  const location = useLocation();\n  const {\n    name_of_course,\n    username_of_person\n  } = location.state || {};\n  console.log(name_of_course);\n  console.log(username_of_person);\n\n  ////These are temporary until location  functionality is implemented////////////////////////////\n  const [showPopup, setShowPopup] = useState(false);\n  const [currSession, setCurrSession] = useState(null);\n  const [lat, setLat] = useState(null);\n  const [lon, setLon] = useState(null);\n\n  // const handleLat = (event) => {\n  //     setLat(parseFloat(event.target.value));\n  //   };\n\n  // const handleLon = (event) => {\n  //     setLon(parseFloat(event.target.value));\n  // };\n\n  //   const handleSubmit = async() => {\n  //     // Process the input value or perform any necessary actions\n  //     console.log('Latitude', lat);\n  //     console.log('Longitude', lon);\n  //     const name_of_course=currSession.course_name;\n  //     const date_of_session=currSession.date;\n  //     const lat_of_session=currSession.lat;\n  //     const lon_of_session=currSession.lon;\n  //     const start_time_of_session=currSession.start_time;\n  //     const end_time_of_session=currSession.end_time;\n  //     console.log(name_of_course);\n  //     // Close the pop-up after processing the input\n  //     setShowPopup(false);\n  //     if(isWithinRadius(parseFloat(lat),parseFloat(lon),parseFloat(lat_of_session),parseFloat(lon_of_session),5)){\n  //         await navigate('/markAttendance',{state: {name_of_course,username_of_person,date_of_session,lat_of_session,lon_of_session,start_time_of_session,end_time_of_session}});\n  //     }else{\n  //         alert(\"You are not in the vicinity to mark the attendance.\");\n  //     }\n\n  //     // Proceed to the next page or perform other actions\n  //     // Add your logic here for navigation or other operations\n  //   };\n\n  ////////////////////////////////////////////////////////////////////////////////////\n\n  // const person = useSelector((state) => {\n  //     return state.persons.person;\n  // });\n\n  const navigate = useNavigate();\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //this function needs to be modified once the location functionality is implemented\n\n  useEffect(() => {\n    // Get user's location\n    navigator.geolocation.getCurrentPosition(function (position) {\n      const userLat = position.coords.latitude;\n      const userLon = position.coords.longitude;\n      console.log(\"Hello for student coords\");\n      console.log(userLat);\n      console.log(userLon);\n      setLat(userLat);\n      setLon(userLon);\n      // setLoading(false);\n    }, function (error) {\n      console.error(\"Error getting user's location:\", error);\n    });\n  }, []);\n  function calculateDistance(lat1, lon1, lat2, lon2) {\n    const R = 6371; // Radius of the Earth in kilometers\n    const dLat = toRadians(lat2 - lat1);\n    const dLon = toRadians(lon2 - lon1);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(toRadians(lat1)) * Math.cos(toRadians(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = R * c * 1000; // Distance in meters\n    return distance;\n  }\n\n  // Function to convert degrees to radians\n  function toRadians(degrees) {\n    return degrees * (Math.PI / 180);\n  }\n  function isWithinRadius(userLat, userLon, pointLat, pointLon, radius) {\n    const distance = calculateDistance(userLat, userLon, pointLat, pointLon);\n    return distance <= radius;\n  }\n  const handleClickCourse = item => {\n    //    setCurrSession(item);\n    //    setShowPopup(true);\n    console.log('Latitude of student', lat);\n    console.log('Longitude of student', lon);\n    const name_of_course = item.course_name;\n    const date_of_session = item.date;\n    const lat_of_session = item.lat;\n    const lon_of_session = item.lon;\n    const start_time_of_session = item.start_time;\n    const end_time_of_session = item.end_time;\n    console.log(name_of_course);\n    // Close the pop-up after processing the input\n    // setShowPopup(false);\n    if (isWithinRadius(parseFloat(lat), parseFloat(lon), parseFloat(lat_of_session), parseFloat(lon_of_session), parseFloat(1000))) {\n      navigate('/markAttendance', {\n        state: {\n          name_of_course,\n          username_of_person,\n          date_of_session,\n          lat_of_session,\n          lon_of_session,\n          start_time_of_session,\n          end_time_of_session\n        }\n      });\n    } else {\n      alert(\"You are not in the vicinity to mark the attendance.\");\n    }\n  };\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  const [selectedTab, setSelectedTab] = useState(0);\n  const handleTabChange = (event, newValue) => {\n    setSelectedTab(newValue);\n  };\n  const [open, setOpen] = useState(false);\n  const handleSpeedDialOpen = () => {\n    setOpen(true);\n  };\n  const handleSpeedDialClose = () => {\n    setOpen(false);\n  };\n\n  ////////////////////////////////////////////////\n  const [datasessions, setDataSessions] = useState([]);\n  useEffect(() => {\n    const fetchDataSession = async () => {\n      try {\n        const response = await axiosInstance.post(\"Home/show_sessions\", {\n          course_name: name_of_course,\n          student_username: username_of_person\n        });\n        console.log(response);\n        if (response.data.msg === \"course_name field is required.\") {\n          alert(response.data.msg);\n        } else if (response.data.msg === \"No such course exist.\") {\n          alert(response.data.msg);\n        } else {\n          const {\n            course_data: courseData\n          } = response.data;\n          console.log(courseData);\n          setDataSessions(courseData);\n        }\n      } catch (error) {\n        console.error('Error fetching data Sessions:', error);\n      }\n    };\n    fetchDataSession();\n  }, []);\n  const [dataActiveSessions, setActiveDataSessions] = useState([]);\n  useEffect(() => {\n    const fetchActiveDataSession = async () => {\n      try {\n        const response = await axiosInstance.post(\"Home/show_active_sessions\", {\n          course_name: name_of_course,\n          student_id: username_of_person\n        });\n        if (response.data.msg === \"course_name field is required.\") {\n          alert(response.data.msg);\n        } else if (response.data.msg === \"No such course exist.\") {\n          alert(response.data.msg);\n        } else {\n          console.log(response);\n          const {\n            course_data: courseData\n          } = response.data;\n          console.log(courseData);\n          setActiveDataSessions(courseData);\n        }\n      } catch (error) {\n        console.error('Error fetching active data Sessions:', error);\n      }\n    };\n    fetchActiveDataSession();\n  }, []);\n  ////////////////////////////////////////////////\n\n  // const handlecourseNameChange = (event) => {\n  //     setcourseName(event.target.value);\n  // };\n\n  //////////////////////////////Adjust date and location function so that it can be detected automatically////////////////////////////////////////\n  const handleDate = event => {\n    setDate(event.target.value);\n  };\n  const handleStartTime = event => {\n    setStartTime(event.target.value);\n  };\n  const handleEndTime = event => {\n    setEndTime(event.target.value);\n  };\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  const handleActionClick = () => {\n    handleSpeedDialClose();\n    // Open the dialog when a SpeedDialAction is clicked\n    setOpenDialog(true);\n  };\n  const handleDialogClose = () => {\n    setOpenDialog(false);\n  };\n\n  // const handleSubmit =async () => {\n  //     // Handle the submitted value (rangeInput) her\n  //    const response = await axiosInstance.post(\"/Home/course\", {name: courseName, teacher:person.username})\n  //     console.log(response)\n  //     handleDialogClose(); // Close the dialog after submitting\n  // };\n\n  ////////////////////////////////////////////////////////////////////////////\n  const handleSubmitSession = async () => {\n    // Handle the submitted value (rangeInput) her\n    try {\n      const response = await axiosInstance.post(\"/Home/create\", {\n        course_name: name_of_course,\n        date: date,\n        start_time: start_time,\n        end_time: end_time\n      });\n      console.log(response);\n      handleDialogClose(); // Close the dialog after submitting\n    } catch (error) {\n      console.error('Error in response from backend of course in session page:', error);\n    }\n  };\n  const listItemStyle = item => ({\n    backgroundColor: item.presence === 'present' ? '#c8e6c9' : item.presence === 'absent' ? '#ffcdd2' : 'inherit'\n    // Adjust the colors '#c8e6c9' and '#ffcdd2' as needed\n  });\n\n  ///////////////////////////////////////////////////////////////////\n  const actions = [{\n    icon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 16\n    }, this),\n    name: 'Add'\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 16\n    }, this),\n    name: 'Delete'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dash\",\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      value: selectedTab,\n      onChange: handleTabChange,\n      style: {\n        width: '950px'\n      },\n      TabIndicatorProps: {\n        style: {\n          backgroundColor: '#007bff'\n        }\n      },\n      sx: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"All Sessions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Active Sessions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 13\n    }, this), selectedTab === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-det\",\n      children: /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          width: '100%',\n          bgcolor: 'background.paper'\n        },\n        children: datasessions.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tile\",\n          children: [index !== 0 && /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"offset\",\n            component: \"li\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            alignItems: \"flex-start\",\n            sx: listItemStyle(item),\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: item.date,\n              secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    display: 'inline'\n                  },\n                  component: \"span\",\n                  variant: \"body2\",\n                  color: \"text.primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 49\n                }, this), \"From \", item.start_time, \" to \", item.end_time]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 61\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 17\n    }, this), selectedTab === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-det\",\n      children: /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          width: '100%',\n          bgcolor: 'background.paper'\n        },\n        children: dataActiveSessions.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tile\",\n          children: [index !== 0 && /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"offset\",\n            component: \"li\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            alignItems: \"flex-start\",\n            onClick: () => handleClickCourse(item),\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: item.date,\n              secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    display: 'inline'\n                  },\n                  component: \"span\",\n                  variant: \"body2\",\n                  color: \"text.primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 49\n                }, this), \"From \", item.start_time, \" to \", item.end_time]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 67\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 9\n  }, this);\n};\n_s(EnrolledSession, \"p4BzNbkrhu7aWJtdLf+EN3GyBkk=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = EnrolledSession;\nexport default EnrolledSession;\nvar _c;\n$RefreshReg$(_c, \"EnrolledSession\");","map":{"version":3,"names":["React","useEffect","useState","Tabs","Tab","ListItemText","Divider","ListItem","List","AddIcon","EditIcon","DeleteIcon","Typography","SpeedDial","SpeedDialIcon","SpeedDialAction","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","TextField","Alert","axiosInstance","useSelector","json","useNavigate","useLocation","jsxDEV","_jsxDEV","EnrolledSession","_s","openSpeedDial","setOpenSpeedDial","openDialog","setOpenDialog","date","setDate","start_time","setStartTime","end_time","setEndTime","location","name_of_course","username_of_person","state","console","log","showPopup","setShowPopup","currSession","setCurrSession","lat","setLat","lon","setLon","navigate","navigator","geolocation","getCurrentPosition","position","userLat","coords","latitude","userLon","longitude","error","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","toRadians","dLon","a","Math","sin","cos","c","atan2","sqrt","distance","degrees","PI","isWithinRadius","pointLat","pointLon","radius","handleClickCourse","item","course_name","date_of_session","lat_of_session","lon_of_session","start_time_of_session","end_time_of_session","parseFloat","alert","selectedTab","setSelectedTab","handleTabChange","event","newValue","open","setOpen","handleSpeedDialOpen","handleSpeedDialClose","datasessions","setDataSessions","fetchDataSession","response","post","student_username","data","msg","course_data","courseData","dataActiveSessions","setActiveDataSessions","fetchActiveDataSession","student_id","handleDate","target","value","handleStartTime","handleEndTime","handleActionClick","handleDialogClose","handleSubmitSession","listItemStyle","backgroundColor","presence","actions","icon","fileName","_jsxFileName","lineNumber","columnNumber","name","className","style","children","onChange","width","TabIndicatorProps","sx","marginBottom","label","bgcolor","map","index","variant","component","alignItems","primary","secondary","Fragment","display","color","onClick","_c","$RefreshReg$"],"sources":["/home/sahil/Student-Record-Management-System/frontend/src/components/EnrolledSession.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport '../styles/componentStyle.css';\nimport {Tabs, Tab, ListItemText, Divider, ListItem, List} from '@mui/material';\n// import Tab from '@mui/material/Tab';\n// import Typography from '@mui/material/Typography';\n// import SpeedDial from '@mui/material/SpeedDial';\n// import SpeedDialIcon from '@mui/material/SpeedDialIcon';\n// import SpeedDialAction from '@mui/material/SpeedDialAction';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\n// import AddRoundedIcon from '@mui/icons-material/AddRounded';\nimport {\n    Typography,\n    SpeedDial,\n    SpeedDialIcon,\n    SpeedDialAction,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n    Button,\n    TextField,\n    Alert\n\n} from '@mui/material';\n// import { TimePicker } from '@mui/x-date-pickers';\n\nimport axiosInstance from \"../axios\";\nimport {useSelector} from \"react-redux\";\nimport {json, useNavigate} from \"react-router-dom\";\nimport {useLocation} from 'react-router-dom';\n\nconst EnrolledSession = () => {\n\n    const [openSpeedDial, setOpenSpeedDial] = useState(false);\n    const [openDialog, setOpenDialog] = useState(false);\n    // const [courseName, setcourseName] = useState(\"\");\n    // const [verificationCode, setverificationCode] = useState(\"\");\n\n    //Need to take the date and location automatically, no need for user to enter them, just for temporary purposes\n    const [date, setDate] = useState(\"\");\n    const [start_time, setStartTime] = useState(\"\");\n    const [end_time, setEndTime] = useState(\"\");\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    \n    const location=useLocation();\n    \n    const {name_of_course,username_of_person} = location.state || {};\n    console.log(name_of_course);\n    console.log(username_of_person);\n\n    ////These are temporary until location  functionality is implemented////////////////////////////\n    const [showPopup, setShowPopup] = useState(false);\n    const [currSession, setCurrSession]=useState(null);\n    const [lat, setLat] = useState(null);\n    const [lon, setLon]=useState(null);\n\n    // const handleLat = (event) => {\n    //     setLat(parseFloat(event.target.value));\n    //   };\n\n    // const handleLon = (event) => {\n    //     setLon(parseFloat(event.target.value));\n    // };\n    \n    //   const handleSubmit = async() => {\n    //     // Process the input value or perform any necessary actions\n    //     console.log('Latitude', lat);\n    //     console.log('Longitude', lon);\n    //     const name_of_course=currSession.course_name;\n    //     const date_of_session=currSession.date;\n    //     const lat_of_session=currSession.lat;\n    //     const lon_of_session=currSession.lon;\n    //     const start_time_of_session=currSession.start_time;\n    //     const end_time_of_session=currSession.end_time;\n    //     console.log(name_of_course);\n    //     // Close the pop-up after processing the input\n    //     setShowPopup(false);\n    //     if(isWithinRadius(parseFloat(lat),parseFloat(lon),parseFloat(lat_of_session),parseFloat(lon_of_session),5)){\n    //         await navigate('/markAttendance',{state: {name_of_course,username_of_person,date_of_session,lat_of_session,lon_of_session,start_time_of_session,end_time_of_session}});\n    //     }else{\n    //         alert(\"You are not in the vicinity to mark the attendance.\");\n    //     }\n    \n    //     // Proceed to the next page or perform other actions\n    //     // Add your logic here for navigation or other operations\n    //   };\n\n////////////////////////////////////////////////////////////////////////////////////\n  \n\n\n    // const person = useSelector((state) => {\n    //     return state.persons.person;\n    // });\n    \n    const navigate = useNavigate();\n    \n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //this function needs to be modified once the location functionality is implemented\n\n    useEffect(() => {\n        // Get user's location\n            navigator.geolocation.getCurrentPosition(\n                function (position) {\n                const userLat = position.coords.latitude;\n                const userLon = position.coords.longitude;\n                console.log(\"Hello for student coords\");\n                console.log(userLat);\n                console.log(userLon);\n                setLat(userLat);\n                setLon(userLon);\n                // setLoading(false);\n                },\n                function (error) {\n                console.error(\"Error getting user's location:\", error);\n                }\n            );\n    \n    \n    \n    }, []);\n\n    function calculateDistance(lat1, lon1, lat2, lon2) {\n        const R = 6371; // Radius of the Earth in kilometers\n        const dLat = toRadians(lat2 - lat1);\n        const dLon = toRadians(lon2 - lon1);\n        const a =\n          Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n          Math.cos(toRadians(lat1)) *\n            Math.cos(toRadians(lat2)) *\n            Math.sin(dLon / 2) *\n            Math.sin(dLon / 2);\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        const distance = R * c * 1000; // Distance in meters\n        return distance;\n      }\n    \n      // Function to convert degrees to radians\n      function toRadians(degrees) {\n        return degrees * (Math.PI / 180);\n      }\n\n\n    function isWithinRadius(userLat, userLon, pointLat, pointLon, radius) {\n        const distance = calculateDistance(userLat, userLon, pointLat, pointLon);\n        return distance <= radius;\n    }\n   \n   \n    const handleClickCourse = (item) =>{\n    //    setCurrSession(item);\n    //    setShowPopup(true);\n        console.log('Latitude of student', lat);\n        console.log('Longitude of student', lon);\n        const name_of_course=item.course_name;\n        const date_of_session=item.date;\n        const lat_of_session=item.lat;\n        const lon_of_session=item.lon;\n        const start_time_of_session=item.start_time;\n        const end_time_of_session=item.end_time;\n        console.log(name_of_course);\n        // Close the pop-up after processing the input\n        // setShowPopup(false);\n        if(isWithinRadius(parseFloat(lat),parseFloat(lon),parseFloat(lat_of_session),parseFloat(lon_of_session),parseFloat(1000))){\n            navigate('/markAttendance',{state: {name_of_course,username_of_person,date_of_session,lat_of_session,lon_of_session,start_time_of_session,end_time_of_session}});\n        }else{\n            alert(\"You are not in the vicinity to mark the attendance.\");\n        }\n    \n    }\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    const [selectedTab, setSelectedTab] = useState(0);\n\n    const handleTabChange = (event, newValue) => {\n        setSelectedTab(newValue);\n    };\n    const [open, setOpen] = useState(false);\n\n    const handleSpeedDialOpen = () => {\n        setOpen(true);\n    };\n\n    const handleSpeedDialClose = () => {\n        setOpen(false);\n    };\n\n\n\n\n\n////////////////////////////////////////////////\n    const [datasessions,setDataSessions]=useState([])\n\n    useEffect(() => {\n        const fetchDataSession = async () => {\n            try {\n                const response = await axiosInstance.post(\"Home/show_sessions\", { course_name: name_of_course, student_username: username_of_person });\n                console.log(response);\n                if(response.data.msg===\"course_name field is required.\"){\n                    alert(response.data.msg);\n                } else if(response.data.msg===\"No such course exist.\"){\n                    alert(response.data.msg);\n                } else{\n\n                    const { course_data: courseData } = response.data;\n                    console.log(courseData);\n                    setDataSessions(courseData);\n                }\n            } catch (error) {\n                console.error('Error fetching data Sessions:', error);\n            }\n        };\n\n        fetchDataSession();\n\n    }, []); \n\n\n    const [dataActiveSessions,setActiveDataSessions]=useState([])  \n\n\n    useEffect(() => {\n        const fetchActiveDataSession = async () => {\n            try {\n                const response = await axiosInstance.post(\"Home/show_active_sessions\", { course_name: name_of_course, student_id:username_of_person });\n                if(response.data.msg===\"course_name field is required.\"){\n                    alert(response.data.msg);\n                }else if(response.data.msg===\"No such course exist.\"){\n                    alert(response.data.msg);\n                } else{\n                    console.log(response);\n    \n                    const { course_data: courseData } = response.data;\n                    console.log(courseData);\n                    setActiveDataSessions(courseData);\n\n                }\n                \n            } catch (error) {\n                console.error('Error fetching active data Sessions:', error);\n            }\n        };\n\n        fetchActiveDataSession();\n\n    }, []); \n////////////////////////////////////////////////\n\n\n\n\n    // const handlecourseNameChange = (event) => {\n    //     setcourseName(event.target.value);\n    // };\n\n//////////////////////////////Adjust date and location function so that it can be detected automatically////////////////////////////////////////\n    const handleDate = (event) => {\n        setDate(event.target.value);\n    };\n\n    const handleStartTime = (event) => {\n        setStartTime(event.target.value);\n    };\n\n    const handleEndTime = (event) => {\n        setEndTime(event.target.value);\n    };\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    const handleActionClick = () => {\n        handleSpeedDialClose();\n        // Open the dialog when a SpeedDialAction is clicked\n        setOpenDialog(true);\n    };\n\n    const handleDialogClose = () => {\n        setOpenDialog(false);\n    };\n\n\n    // const handleSubmit =async () => {\n    //     // Handle the submitted value (rangeInput) her\n    //    const response = await axiosInstance.post(\"/Home/course\", {name: courseName, teacher:person.username})\n    //     console.log(response)\n    //     handleDialogClose(); // Close the dialog after submitting\n    // };\n\n\n\n\n\n////////////////////////////////////////////////////////////////////////////\n    const handleSubmitSession =async () => {\n        // Handle the submitted value (rangeInput) her\n        try{\n            const response = await axiosInstance.post(\"/Home/create\", {course_name:name_of_course,date:date,start_time:start_time,end_time:end_time})\n            console.log(response)\n            handleDialogClose(); // Close the dialog after submitting\n        }\n        catch(error){\n            console.error('Error in response from backend of course in session page:', error);\n        }\n\n    };\n\n\n\n    const listItemStyle = (item)=>({\n        backgroundColor: item.presence === 'present' ? '#c8e6c9' : (item.presence === 'absent' ? '#ffcdd2' : 'inherit')\n        // Adjust the colors '#c8e6c9' and '#ffcdd2' as needed\n    });\n\n///////////////////////////////////////////////////////////////////\n    const actions = [\n        {icon: <AddIcon/>, name: 'Add'},\n        {icon: <DeleteIcon/>, name: 'Delete'},\n    ];\n\n\n\n    return (\n        <div className=\"dash\" style={{ position: 'relative' }}>\n            <Tabs\n                value={selectedTab}\n                onChange={handleTabChange}\n                style={{width: '950px'}}\n                TabIndicatorProps={{\n                    style: {\n                        backgroundColor: '#007bff'\n                    },\n                }}\n                sx={{marginBottom: '20px'}}\n            >\n                <Tab label=\"All Sessions\"/>\n                <Tab label=\"Active Sessions\"/>\n                \n            </Tabs>\n            {selectedTab === 0 && (\n                <div className='tab-det'>\n                    {/* Content for Tab 1 */}\n                    <List sx={{width: '100%', bgcolor: 'background.paper'}}>\n                        {datasessions.map((item, index) => (<div className='tile' key={index}>\n                                {index !== 0 && <Divider variant=\"offset\" component=\"li\"/>}\n                                <ListItem alignItems=\"flex-start\" sx={listItemStyle(item)} >\n\n                                    <ListItemText\n                                        primary={item.date}\n                                        secondary={\n                                            <React.Fragment>\n                                                <Typography\n                                                    sx={{display: 'inline'}}\n                                                    component=\"span\"\n                                                    variant=\"body2\"\n                                                    color=\"text.primary\"\n                                                >\n\n                                                </Typography>\n                                                From {item.start_time} to {item.end_time}\n                                                \n                                            </React.Fragment>\n                                        }\n                                    />\n                                </ListItem>\n                            </div>\n                        ))}\n                    </List>\n\n\n                </div>\n            )}\n\n            {selectedTab === 1 && (\n                <div className='tab-det'>\n                    {/* Content for Tab 1 */}\n                    <List sx={{width: '100%', bgcolor: 'background.paper'}}>\n                        {dataActiveSessions.map((item, index) => (<div className='tile' key={index}>\n                                {index !== 0 && <Divider variant=\"offset\" component=\"li\"/>}\n                                <ListItem alignItems=\"flex-start\" onClick={() => handleClickCourse(item)}>\n\n                                    <ListItemText\n                                        primary={item.date}\n                                        secondary={\n                                            <React.Fragment>\n                                                <Typography\n                                                    sx={{display: 'inline'}}\n                                                    component=\"span\"\n                                                    variant=\"body2\"\n                                                    color=\"text.primary\"\n                                                >\n\n                                                </Typography>\n                                                From {item.start_time} to {item.end_time}\n                                            </React.Fragment>\n                                        }\n                                    />\n                                </ListItem>\n                            </div>\n                        ))}\n                    </List>\n\n\n                </div>\n            )}\n{/* /////////////////////////////////////////////////////////// */}\n        {/* {showPopup && (\n        <div\n          style={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <div\n            style={{\n              backgroundColor: '#fff',\n              padding: '20px',\n              borderRadius: '8px',\n              boxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)',\n              zIndex: 999,\n            }}\n          >\n            <h2>Enter latitude</h2>\n            <input\n              type=\"number\"\n              value={lat}\n              onChange={handleLat}\n              style={{ marginBottom: '10px' }}\n            />\n            <h2>Enter longitude</h2>\n            <input\n              type=\"number\"\n              value={lon}\n              onChange={handleLon}\n              style={{ marginBottom: '10px' }}\n            />\n            <button onClick={handleSubmit}>Submit</button>\n          </div>\n        </div>\n      )} */}\n {/* /////////////////////////////////////////////////////////// */}\n          \n           \n\n\n        </div>\n    );\n};\n\nexport default EnrolledSession;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAO,8BAA8B;AACrC,SAAQC,IAAI,EAAEC,GAAG,EAAEC,YAAY,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,IAAI,QAAO,eAAe;AAC9E;AACA;AACA;AACA;AACA;AACA,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,UAAU,MAAM,4BAA4B;;AAEnD;AACA,SACIC,UAAU,EACVC,SAAS,EACTC,aAAa,EACbC,eAAe,EACfC,MAAM,EACNC,WAAW,EACXC,aAAa,EACbC,iBAAiB,EACjBC,aAAa,EACbC,MAAM,EACNC,SAAS,EACTC,KAAK,QAEF,eAAe;AACtB;;AAEA,OAAOC,aAAa,MAAM,UAAU;AACpC,SAAQC,WAAW,QAAO,aAAa;AACvC,SAAQC,IAAI,EAAEC,WAAW,QAAO,kBAAkB;AAClD,SAAQC,WAAW,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE1B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACiC,UAAU,EAAEC,aAAa,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EACnD;EACA;;EAEA;EACA,MAAM,CAACmC,IAAI,EAAEC,OAAO,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACqC,UAAU,EAAEC,YAAY,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM,CAACuC,QAAQ,EAAEC,UAAU,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAC3C;;EAEA,MAAMyC,QAAQ,GAACf,WAAW,CAAC,CAAC;EAE5B,MAAM;IAACgB,cAAc;IAACC;EAAkB,CAAC,GAAGF,QAAQ,CAACG,KAAK,IAAI,CAAC,CAAC;EAChEC,OAAO,CAACC,GAAG,CAACJ,cAAc,CAAC;EAC3BG,OAAO,CAACC,GAAG,CAACH,kBAAkB,CAAC;;EAE/B;EACA,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGhD,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACiD,WAAW,EAAEC,cAAc,CAAC,GAAClD,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACmD,GAAG,EAAEC,MAAM,CAAC,GAAGpD,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACqD,GAAG,EAAEC,MAAM,CAAC,GAACtD,QAAQ,CAAC,IAAI,CAAC;;EAElC;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEJ;;EAII;EACA;EACA;;EAEA,MAAMuD,QAAQ,GAAG9B,WAAW,CAAC,CAAC;;EAElC;EACI;;EAEA1B,SAAS,CAAC,MAAM;IACZ;IACIyD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACpC,UAAUC,QAAQ,EAAE;MACpB,MAAMC,OAAO,GAAGD,QAAQ,CAACE,MAAM,CAACC,QAAQ;MACxC,MAAMC,OAAO,GAAGJ,QAAQ,CAACE,MAAM,CAACG,SAAS;MACzCnB,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvCD,OAAO,CAACC,GAAG,CAACc,OAAO,CAAC;MACpBf,OAAO,CAACC,GAAG,CAACiB,OAAO,CAAC;MACpBX,MAAM,CAACQ,OAAO,CAAC;MACfN,MAAM,CAACS,OAAO,CAAC;MACf;IACA,CAAC,EACD,UAAUE,KAAK,EAAE;MACjBpB,OAAO,CAACoB,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,CACJ,CAAC;EAIT,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,iBAAiBA,CAACC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAE;IAC/C,MAAMC,CAAC,GAAG,IAAI,CAAC,CAAC;IAChB,MAAMC,IAAI,GAAGC,SAAS,CAACJ,IAAI,GAAGF,IAAI,CAAC;IACnC,MAAMO,IAAI,GAAGD,SAAS,CAACH,IAAI,GAAGF,IAAI,CAAC;IACnC,MAAMO,CAAC,GACLC,IAAI,CAACC,GAAG,CAACL,IAAI,GAAG,CAAC,CAAC,GAAGI,IAAI,CAACC,GAAG,CAACL,IAAI,GAAG,CAAC,CAAC,GACvCI,IAAI,CAACE,GAAG,CAACL,SAAS,CAACN,IAAI,CAAC,CAAC,GACvBS,IAAI,CAACE,GAAG,CAACL,SAAS,CAACJ,IAAI,CAAC,CAAC,GACzBO,IAAI,CAACC,GAAG,CAACH,IAAI,GAAG,CAAC,CAAC,GAClBE,IAAI,CAACC,GAAG,CAACH,IAAI,GAAG,CAAC,CAAC;IACtB,MAAMK,CAAC,GAAG,CAAC,GAAGH,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACK,IAAI,CAACN,CAAC,CAAC,EAAEC,IAAI,CAACK,IAAI,CAAC,CAAC,GAAGN,CAAC,CAAC,CAAC;IACxD,MAAMO,QAAQ,GAAGX,CAAC,GAAGQ,CAAC,GAAG,IAAI,CAAC,CAAC;IAC/B,OAAOG,QAAQ;EACjB;;EAEA;EACA,SAAST,SAASA,CAACU,OAAO,EAAE;IAC1B,OAAOA,OAAO,IAAIP,IAAI,CAACQ,EAAE,GAAG,GAAG,CAAC;EAClC;EAGF,SAASC,cAAcA,CAACzB,OAAO,EAAEG,OAAO,EAAEuB,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAE;IAClE,MAAMN,QAAQ,GAAGhB,iBAAiB,CAACN,OAAO,EAAEG,OAAO,EAAEuB,QAAQ,EAAEC,QAAQ,CAAC;IACxE,OAAOL,QAAQ,IAAIM,MAAM;EAC7B;EAGA,MAAMC,iBAAiB,GAAIC,IAAI,IAAI;IACnC;IACA;IACI7C,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEK,GAAG,CAAC;IACvCN,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEO,GAAG,CAAC;IACxC,MAAMX,cAAc,GAACgD,IAAI,CAACC,WAAW;IACrC,MAAMC,eAAe,GAACF,IAAI,CAACvD,IAAI;IAC/B,MAAM0D,cAAc,GAACH,IAAI,CAACvC,GAAG;IAC7B,MAAM2C,cAAc,GAACJ,IAAI,CAACrC,GAAG;IAC7B,MAAM0C,qBAAqB,GAACL,IAAI,CAACrD,UAAU;IAC3C,MAAM2D,mBAAmB,GAACN,IAAI,CAACnD,QAAQ;IACvCM,OAAO,CAACC,GAAG,CAACJ,cAAc,CAAC;IAC3B;IACA;IACA,IAAG2C,cAAc,CAACY,UAAU,CAAC9C,GAAG,CAAC,EAAC8C,UAAU,CAAC5C,GAAG,CAAC,EAAC4C,UAAU,CAACJ,cAAc,CAAC,EAACI,UAAU,CAACH,cAAc,CAAC,EAACG,UAAU,CAAC,IAAI,CAAC,CAAC,EAAC;MACtH1C,QAAQ,CAAC,iBAAiB,EAAC;QAACX,KAAK,EAAE;UAACF,cAAc;UAACC,kBAAkB;UAACiD,eAAe;UAACC,cAAc;UAACC,cAAc;UAACC,qBAAqB;UAACC;QAAmB;MAAC,CAAC,CAAC;IACpK,CAAC,MAAI;MACDE,KAAK,CAAC,qDAAqD,CAAC;IAChE;EAEJ,CAAC;EACL;;EAEI,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGpG,QAAQ,CAAC,CAAC,CAAC;EAEjD,MAAMqG,eAAe,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACzCH,cAAc,CAACG,QAAQ,CAAC;EAC5B,CAAC;EACD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGzG,QAAQ,CAAC,KAAK,CAAC;EAEvC,MAAM0G,mBAAmB,GAAGA,CAAA,KAAM;IAC9BD,OAAO,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,MAAME,oBAAoB,GAAGA,CAAA,KAAM;IAC/BF,OAAO,CAAC,KAAK,CAAC;EAClB,CAAC;;EAML;EACI,MAAM,CAACG,YAAY,EAACC,eAAe,CAAC,GAAC7G,QAAQ,CAAC,EAAE,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACZ,MAAM+G,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMzF,aAAa,CAAC0F,IAAI,CAAC,oBAAoB,EAAE;UAAErB,WAAW,EAAEjD,cAAc;UAAEuE,gBAAgB,EAAEtE;QAAmB,CAAC,CAAC;QACtIE,OAAO,CAACC,GAAG,CAACiE,QAAQ,CAAC;QACrB,IAAGA,QAAQ,CAACG,IAAI,CAACC,GAAG,KAAG,gCAAgC,EAAC;UACpDjB,KAAK,CAACa,QAAQ,CAACG,IAAI,CAACC,GAAG,CAAC;QAC5B,CAAC,MAAM,IAAGJ,QAAQ,CAACG,IAAI,CAACC,GAAG,KAAG,uBAAuB,EAAC;UAClDjB,KAAK,CAACa,QAAQ,CAACG,IAAI,CAACC,GAAG,CAAC;QAC5B,CAAC,MAAK;UAEF,MAAM;YAAEC,WAAW,EAAEC;UAAW,CAAC,GAAGN,QAAQ,CAACG,IAAI;UACjDrE,OAAO,CAACC,GAAG,CAACuE,UAAU,CAAC;UACvBR,eAAe,CAACQ,UAAU,CAAC;QAC/B;MACJ,CAAC,CAAC,OAAOpD,KAAK,EAAE;QACZpB,OAAO,CAACoB,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACzD;IACJ,CAAC;IAED6C,gBAAgB,CAAC,CAAC;EAEtB,CAAC,EAAE,EAAE,CAAC;EAGN,MAAM,CAACQ,kBAAkB,EAACC,qBAAqB,CAAC,GAACvH,QAAQ,CAAC,EAAE,CAAC;EAG7DD,SAAS,CAAC,MAAM;IACZ,MAAMyH,sBAAsB,GAAG,MAAAA,CAAA,KAAY;MACvC,IAAI;QACA,MAAMT,QAAQ,GAAG,MAAMzF,aAAa,CAAC0F,IAAI,CAAC,2BAA2B,EAAE;UAAErB,WAAW,EAAEjD,cAAc;UAAE+E,UAAU,EAAC9E;QAAmB,CAAC,CAAC;QACtI,IAAGoE,QAAQ,CAACG,IAAI,CAACC,GAAG,KAAG,gCAAgC,EAAC;UACpDjB,KAAK,CAACa,QAAQ,CAACG,IAAI,CAACC,GAAG,CAAC;QAC5B,CAAC,MAAK,IAAGJ,QAAQ,CAACG,IAAI,CAACC,GAAG,KAAG,uBAAuB,EAAC;UACjDjB,KAAK,CAACa,QAAQ,CAACG,IAAI,CAACC,GAAG,CAAC;QAC5B,CAAC,MAAK;UACFtE,OAAO,CAACC,GAAG,CAACiE,QAAQ,CAAC;UAErB,MAAM;YAAEK,WAAW,EAAEC;UAAW,CAAC,GAAGN,QAAQ,CAACG,IAAI;UACjDrE,OAAO,CAACC,GAAG,CAACuE,UAAU,CAAC;UACvBE,qBAAqB,CAACF,UAAU,CAAC;QAErC;MAEJ,CAAC,CAAC,OAAOpD,KAAK,EAAE;QACZpB,OAAO,CAACoB,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAChE;IACJ,CAAC;IAEDuD,sBAAsB,CAAC,CAAC;EAE5B,CAAC,EAAE,EAAE,CAAC;EACV;;EAKI;EACA;EACA;;EAEJ;EACI,MAAME,UAAU,GAAIpB,KAAK,IAAK;IAC1BlE,OAAO,CAACkE,KAAK,CAACqB,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,eAAe,GAAIvB,KAAK,IAAK;IAC/BhE,YAAY,CAACgE,KAAK,CAACqB,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAME,aAAa,GAAIxB,KAAK,IAAK;IAC7B9D,UAAU,CAAC8D,KAAK,CAACqB,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;;EAEL;;EAEI,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC5BpB,oBAAoB,CAAC,CAAC;IACtB;IACAzE,aAAa,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAM8F,iBAAiB,GAAGA,CAAA,KAAM;IAC5B9F,aAAa,CAAC,KAAK,CAAC;EACxB,CAAC;;EAGD;EACA;EACA;EACA;EACA;EACA;;EAMJ;EACI,MAAM+F,mBAAmB,GAAE,MAAAA,CAAA,KAAY;IACnC;IACA,IAAG;MACC,MAAMlB,QAAQ,GAAG,MAAMzF,aAAa,CAAC0F,IAAI,CAAC,cAAc,EAAE;QAACrB,WAAW,EAACjD,cAAc;QAACP,IAAI,EAACA,IAAI;QAACE,UAAU,EAACA,UAAU;QAACE,QAAQ,EAACA;MAAQ,CAAC,CAAC;MACzIM,OAAO,CAACC,GAAG,CAACiE,QAAQ,CAAC;MACrBiB,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC,CACD,OAAM/D,KAAK,EAAC;MACRpB,OAAO,CAACoB,KAAK,CAAC,2DAA2D,EAAEA,KAAK,CAAC;IACrF;EAEJ,CAAC;EAID,MAAMiE,aAAa,GAAIxC,IAAI,KAAI;IAC3ByC,eAAe,EAAEzC,IAAI,CAAC0C,QAAQ,KAAK,SAAS,GAAG,SAAS,GAAI1C,IAAI,CAAC0C,QAAQ,KAAK,QAAQ,GAAG,SAAS,GAAG;IACrG;EACJ,CAAC,CAAC;;EAEN;EACI,MAAMC,OAAO,GAAG,CACZ;IAACC,IAAI,eAAE1G,OAAA,CAACrB,OAAO;MAAAgI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;IAAEC,IAAI,EAAE;EAAK,CAAC,EAC/B;IAACL,IAAI,eAAE1G,OAAA,CAACnB,UAAU;MAAA8H,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;IAAEC,IAAI,EAAE;EAAQ,CAAC,CACxC;EAID,oBACI/G,OAAA;IAAKgH,SAAS,EAAC,MAAM;IAACC,KAAK,EAAE;MAAElF,QAAQ,EAAE;IAAW,CAAE;IAAAmF,QAAA,gBAClDlH,OAAA,CAAC3B,IAAI;MACD2H,KAAK,EAAEzB,WAAY;MACnB4C,QAAQ,EAAE1C,eAAgB;MAC1BwC,KAAK,EAAE;QAACG,KAAK,EAAE;MAAO,CAAE;MACxBC,iBAAiB,EAAE;QACfJ,KAAK,EAAE;UACHV,eAAe,EAAE;QACrB;MACJ,CAAE;MACFe,EAAE,EAAE;QAACC,YAAY,EAAE;MAAM,CAAE;MAAAL,QAAA,gBAE3BlH,OAAA,CAAC1B,GAAG;QAACkJ,KAAK,EAAC;MAAc;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC3B9G,OAAA,CAAC1B,GAAG;QAACkJ,KAAK,EAAC;MAAiB;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5B,CAAC,EACNvC,WAAW,KAAK,CAAC,iBACdvE,OAAA;MAAKgH,SAAS,EAAC,SAAS;MAAAE,QAAA,eAEpBlH,OAAA,CAACtB,IAAI;QAAC4I,EAAE,EAAE;UAACF,KAAK,EAAE,MAAM;UAAEK,OAAO,EAAE;QAAkB,CAAE;QAAAP,QAAA,EAClDlC,YAAY,CAAC0C,GAAG,CAAC,CAAC5D,IAAI,EAAE6D,KAAK,kBAAM3H,OAAA;UAAKgH,SAAS,EAAC,MAAM;UAAAE,QAAA,GAChDS,KAAK,KAAK,CAAC,iBAAI3H,OAAA,CAACxB,OAAO;YAACoJ,OAAO,EAAC,QAAQ;YAACC,SAAS,EAAC;UAAI;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eAC1D9G,OAAA,CAACvB,QAAQ;YAACqJ,UAAU,EAAC,YAAY;YAACR,EAAE,EAAEhB,aAAa,CAACxC,IAAI,CAAE;YAAAoD,QAAA,eAEtDlH,OAAA,CAACzB,YAAY;cACTwJ,OAAO,EAAEjE,IAAI,CAACvD,IAAK;cACnByH,SAAS,eACLhI,OAAA,CAAC9B,KAAK,CAAC+J,QAAQ;gBAAAf,QAAA,gBACXlH,OAAA,CAAClB,UAAU;kBACPwI,EAAE,EAAE;oBAACY,OAAO,EAAE;kBAAQ,CAAE;kBACxBL,SAAS,EAAC,MAAM;kBAChBD,OAAO,EAAC,OAAO;kBACfO,KAAK,EAAC;gBAAc;kBAAAxB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAGZ,CAAC,SACR,EAAChD,IAAI,CAACrD,UAAU,EAAC,MAAI,EAACqD,IAAI,CAACnD,QAAQ;cAAA;gBAAAgG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAE5B;YACnB;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA,GArB4Ca,KAAK;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAsB3D,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGN,CACR,EAEAvC,WAAW,KAAK,CAAC,iBACdvE,OAAA;MAAKgH,SAAS,EAAC,SAAS;MAAAE,QAAA,eAEpBlH,OAAA,CAACtB,IAAI;QAAC4I,EAAE,EAAE;UAACF,KAAK,EAAE,MAAM;UAAEK,OAAO,EAAE;QAAkB,CAAE;QAAAP,QAAA,EAClDxB,kBAAkB,CAACgC,GAAG,CAAC,CAAC5D,IAAI,EAAE6D,KAAK,kBAAM3H,OAAA;UAAKgH,SAAS,EAAC,MAAM;UAAAE,QAAA,GACtDS,KAAK,KAAK,CAAC,iBAAI3H,OAAA,CAACxB,OAAO;YAACoJ,OAAO,EAAC,QAAQ;YAACC,SAAS,EAAC;UAAI;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eAC1D9G,OAAA,CAACvB,QAAQ;YAACqJ,UAAU,EAAC,YAAY;YAACM,OAAO,EAAEA,CAAA,KAAMvE,iBAAiB,CAACC,IAAI,CAAE;YAAAoD,QAAA,eAErElH,OAAA,CAACzB,YAAY;cACTwJ,OAAO,EAAEjE,IAAI,CAACvD,IAAK;cACnByH,SAAS,eACLhI,OAAA,CAAC9B,KAAK,CAAC+J,QAAQ;gBAAAf,QAAA,gBACXlH,OAAA,CAAClB,UAAU;kBACPwI,EAAE,EAAE;oBAACY,OAAO,EAAE;kBAAQ,CAAE;kBACxBL,SAAS,EAAC,MAAM;kBAChBD,OAAO,EAAC,OAAO;kBACfO,KAAK,EAAC;gBAAc;kBAAAxB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAGZ,CAAC,SACR,EAAChD,IAAI,CAACrD,UAAU,EAAC,MAAI,EAACqD,IAAI,CAACnD,QAAQ;cAAA;gBAAAgG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B;YACnB;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA,GApBkDa,KAAK;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAqBjE,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGN,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAgDA,CAAC;AAEd,CAAC;AAAC5G,EAAA,CAvaID,eAAe;EAAA,QAaFH,WAAW,EAmDTD,WAAW;AAAA;AAAAwI,EAAA,GAhE1BpI,eAAe;AAyarB,eAAeA,eAAe;AAAC,IAAAoI,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}