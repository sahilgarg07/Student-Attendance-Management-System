{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useDispatch } from 'react-redux';\nimport { userLogin } from '../Store/Slices/userSlice';\nimport { personLogin } from '../Store/Slices/personSlice';\nimport { useState } from 'react';\nexport const useVerifyUser = () => {\n  _s();\n  const [isVerifying, setIsVerifying] = useState(true);\n  const dispatch = useDispatch();\n  const verifystate = async () => {\n    setIsVerifying(true);\n    let local = JSON.parse(localStorage.getItem('user'));\n    // console.log(local.email,local.token);\n    if (local) {\n      const response = await fetch('/api/data/findperson', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${local.email} ${local.token}`\n        },\n        body: JSON.stringify({\n          email: local.email\n        })\n      });\n      const json = await response.json();\n      // console.log(json);\n      if (response.ok) {\n        dispatch(userLogin(local));\n        dispatch(personLogin(json));\n      }\n    }\n    setIsVerifying(false);\n  };\n  return {\n    verifystate,\n    isVerifying\n  };\n};\n_s(useVerifyUser, \"lXsmgcTmb9vAaOTMFpvisI80Kog=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"names":["useDispatch","userLogin","personLogin","useState","useVerifyUser","_s","isVerifying","setIsVerifying","dispatch","verifystate","local","JSON","parse","localStorage","getItem","response","fetch","method","headers","email","token","body","stringify","json","ok"],"sources":["/home/sahil/Student-Record-Management-System/frontend/src/hooks/useVerifyUser.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { userLogin } from '../Store/Slices/userSlice';\nimport { personLogin } from '../Store/Slices/personSlice';\nimport { useState } from 'react';\n\nexport const useVerifyUser = () => {\n    const [isVerifying, setIsVerifying] = useState(true);\n    const dispatch = useDispatch();\n    const verifystate = async () => {\n        setIsVerifying(true);\n        let local = JSON.parse(localStorage.getItem('user'));\n        // console.log(local.email,local.token);\n        if (local) {\n\n            const response = await fetch('/api/data/findperson', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${local.email} ${local.token}`\n                },\n                body: JSON.stringify({email: local.email})\n            })\n            const json = await response.json();\n            // console.log(json);\n            if (response.ok) {\n                dispatch(userLogin(local));\n                dispatch(personLogin(json));\n            }\n        }\n        \n        setIsVerifying(false); \n    }\n    return { verifystate, isVerifying };\n}"],"mappings":";AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,QAAQ,2BAA2B;AACrD,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAASC,QAAQ,QAAQ,OAAO;AAEhC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMK,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5BF,cAAc,CAAC,IAAI,CAAC;IACpB,IAAIG,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IACpD;IACA,IAAIJ,KAAK,EAAE;MAEP,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,sBAAsB,EAAE;QACjDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASR,KAAK,CAACS,KAAM,IAAGT,KAAK,CAACU,KAAM;QAC1D,CAAC;QACDC,IAAI,EAAEV,IAAI,CAACW,SAAS,CAAC;UAACH,KAAK,EAAET,KAAK,CAACS;QAAK,CAAC;MAC7C,CAAC,CAAC;MACF,MAAMI,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClC;MACA,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACbhB,QAAQ,CAACP,SAAS,CAACS,KAAK,CAAC,CAAC;QAC1BF,QAAQ,CAACN,WAAW,CAACqB,IAAI,CAAC,CAAC;MAC/B;IACJ;IAEAhB,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;EACD,OAAO;IAAEE,WAAW;IAAEH;EAAY,CAAC;AACvC,CAAC;AAAAD,EAAA,CA5BYD,aAAa;EAAA,QAELJ,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}