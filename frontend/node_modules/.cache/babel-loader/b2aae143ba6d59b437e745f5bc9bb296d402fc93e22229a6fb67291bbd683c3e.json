{"ast":null,"code":"const ANGLE_APPROX = 5; // Angle (in deg) for which we approximate the rectangle as perfectly horizontal/vertical\n\nlet warnedOnce = false;\n\n/**\n * Return the minimal translation along the x-axis to avoid overflow of a rectangle of a given width, height, and rotation.\n * This assumes that all rectangles have the same height and angle between -90 and 90.\n * Otherwise it would be problematic because you need the height/width of the next rectangle to do the correct computation.\n * @param width the side along the x-axis.\n * @param height the side along the y-axis.\n * @param angle the rotation in degrees.\n */\nexport function getMinXTranslation(width, height) {\n  let angle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce && angle > 90 && angle < -90) {\n      warnedOnce = true;\n      console.warn([`MUI X: It seems you applied an angle larger than 90째 or smaller than -90째 to an axis text.`, `This could cause some text overlapping.`, `If you encounter a use case where it's needed, please open an issue.`].join('\\n'));\n    }\n  }\n  const standardAngle = Math.min(Math.abs(angle) % 180, Math.abs(Math.abs(angle) % 180 - 180) % 180); // Map from R to [0, 90]\n\n  if (standardAngle < ANGLE_APPROX) {\n    // It's nearly horizontal\n    return width;\n  }\n  if (standardAngle > 90 - ANGLE_APPROX) {\n    // It's nearly vertical\n    return height;\n  }\n  const radAngle = standardAngle * Math.PI / 180;\n  const angleSwich = Math.atan2(height, width);\n  if (radAngle < angleSwich) {\n    return width / Math.cos(radAngle);\n  }\n  return height / Math.sin(radAngle);\n}","map":{"version":3,"names":["ANGLE_APPROX","warnedOnce","getMinXTranslation","width","height","angle","arguments","length","undefined","process","env","NODE_ENV","console","warn","join","standardAngle","Math","min","abs","radAngle","PI","angleSwich","atan2","cos","sin"],"sources":["/home/sahil/Student-Record-Management-System/frontend/node_modules/@mui/x-charts/esm/internals/geometry.js"],"sourcesContent":["const ANGLE_APPROX = 5; // Angle (in deg) for which we approximate the rectangle as perfectly horizontal/vertical\n\nlet warnedOnce = false;\n\n/**\n * Return the minimal translation along the x-axis to avoid overflow of a rectangle of a given width, height, and rotation.\n * This assumes that all rectangles have the same height and angle between -90 and 90.\n * Otherwise it would be problematic because you need the height/width of the next rectangle to do the correct computation.\n * @param width the side along the x-axis.\n * @param height the side along the y-axis.\n * @param angle the rotation in degrees.\n */\nexport function getMinXTranslation(width, height, angle = 0) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce && angle > 90 && angle < -90) {\n      warnedOnce = true;\n      console.warn([`MUI X: It seems you applied an angle larger than 90째 or smaller than -90째 to an axis text.`, `This could cause some text overlapping.`, `If you encounter a use case where it's needed, please open an issue.`].join('\\n'));\n    }\n  }\n  const standardAngle = Math.min(Math.abs(angle) % 180, Math.abs(Math.abs(angle) % 180 - 180) % 180); // Map from R to [0, 90]\n\n  if (standardAngle < ANGLE_APPROX) {\n    // It's nearly horizontal\n    return width;\n  }\n  if (standardAngle > 90 - ANGLE_APPROX) {\n    // It's nearly vertical\n    return height;\n  }\n  const radAngle = standardAngle * Math.PI / 180;\n  const angleSwich = Math.atan2(height, width);\n  if (radAngle < angleSwich) {\n    return width / Math.cos(radAngle);\n  }\n  return height / Math.sin(radAngle);\n}"],"mappings":"AAAA,MAAMA,YAAY,GAAG,CAAC,CAAC,CAAC;;AAExB,IAAIC,UAAU,GAAG,KAAK;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,kBAAkBA,CAACC,KAAK,EAAEC,MAAM,EAAa;EAAA,IAAXC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EACzD,IAAIG,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAI,CAACV,UAAU,IAAII,KAAK,GAAG,EAAE,IAAIA,KAAK,GAAG,CAAC,EAAE,EAAE;MAC5CJ,UAAU,GAAG,IAAI;MACjBW,OAAO,CAACC,IAAI,CAAC,CAAE,4FAA2F,EAAG,yCAAwC,EAAG,sEAAqE,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5O;EACF;EACA,MAAMC,aAAa,GAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAACb,KAAK,CAAC,GAAG,GAAG,EAAEW,IAAI,CAACE,GAAG,CAACF,IAAI,CAACE,GAAG,CAACb,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;;EAEpG,IAAIU,aAAa,GAAGf,YAAY,EAAE;IAChC;IACA,OAAOG,KAAK;EACd;EACA,IAAIY,aAAa,GAAG,EAAE,GAAGf,YAAY,EAAE;IACrC;IACA,OAAOI,MAAM;EACf;EACA,MAAMe,QAAQ,GAAGJ,aAAa,GAAGC,IAAI,CAACI,EAAE,GAAG,GAAG;EAC9C,MAAMC,UAAU,GAAGL,IAAI,CAACM,KAAK,CAAClB,MAAM,EAAED,KAAK,CAAC;EAC5C,IAAIgB,QAAQ,GAAGE,UAAU,EAAE;IACzB,OAAOlB,KAAK,GAAGa,IAAI,CAACO,GAAG,CAACJ,QAAQ,CAAC;EACnC;EACA,OAAOf,MAAM,GAAGY,IAAI,CAACQ,GAAG,CAACL,QAAQ,CAAC;AACpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}