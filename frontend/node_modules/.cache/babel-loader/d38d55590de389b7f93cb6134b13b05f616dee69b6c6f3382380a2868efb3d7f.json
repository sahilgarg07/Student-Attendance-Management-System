{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { userSlice } from \"./Slices/userSlice\";\nimport { personSlice } from \"./Slices/personSlice\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { combineReducers } from 'redux';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['users', 'persons'] // only users and persons will be persisted\n};\n\nconst rootReducer = combineReducers({\n  users: userSlice.reducer,\n  persons: personSlice.reducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  })\n});\nexport const persistor = persistStore(store);","map":{"version":3,"names":["configureStore","userSlice","personSlice","persistStore","persistReducer","storage","combineReducers","persistConfig","key","whitelist","rootReducer","users","reducer","persons","persistedReducer","store","middleware","getDefaultMiddleware","serializableCheck","persistor"],"sources":["/home/sahil/Student-Record-Management-System/frontend/src/Store/index.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport { userSlice } from \"./Slices/userSlice\";\nimport { personSlice } from \"./Slices/personSlice\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { combineReducers } from 'redux';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['users', 'persons'] // only users and persons will be persisted\n};\n\nconst rootReducer = combineReducers({\n  users: userSlice.reducer,\n  persons: personSlice.reducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n});\n\nexport const persistor = persistStore(store);"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,eAAe,QAAQ,OAAO;AAEvC,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXH,OAAO;EACPI,SAAS,EAAE,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AAClC,CAAC;;AAED,MAAMC,WAAW,GAAGJ,eAAe,CAAC;EAClCK,KAAK,EAAEV,SAAS,CAACW,OAAO;EACxBC,OAAO,EAAEX,WAAW,CAACU;AACvB,CAAC,CAAC;AAEF,MAAME,gBAAgB,GAAGV,cAAc,CAACG,aAAa,EAAEG,WAAW,CAAC;AAEnE,OAAO,MAAMK,KAAK,GAAGf,cAAc,CAAC;EAClCY,OAAO,EAAEE,gBAAgB;EACzBE,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;EACrB,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAGhB,YAAY,CAACY,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}