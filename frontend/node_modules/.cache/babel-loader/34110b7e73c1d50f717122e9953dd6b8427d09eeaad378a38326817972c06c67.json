{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { userLogin } from '../Store/Slices/userSlice';\nimport { personLogin } from '../Store/Slices/personSlice';\nimport axiosInstance from \"../axios\";\nexport const useAuthPersist = () => {\n  _s();\n  const dispatch = useDispatch();\n  const checkAuth = async () => {\n    const accessToken = localStorage.getItem('access_token');\n    if (accessToken) {\n      try {\n        axiosInstance.defaults.headers['Authorization'] = `Bearer ${accessToken}`;\n        const profileResponse = await axiosInstance.get('Auth/profile');\n        dispatch(userLogin({\n          token: {\n            access: accessToken\n          }\n        }));\n        dispatch(personLogin(profileResponse.data));\n      } catch (error) {\n        console.error('Auth check failed:', error);\n        // Token refresh is handled by axios interceptor\n      }\n    }\n  };\n\n  useEffect(() => {\n    checkAuth();\n  }, []);\n  return checkAuth;\n};\n_s(useAuthPersist, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"names":["useEffect","useDispatch","userLogin","personLogin","axiosInstance","useAuthPersist","_s","dispatch","checkAuth","accessToken","localStorage","getItem","defaults","headers","profileResponse","get","token","access","data","error","console"],"sources":["/home/sahil/Student-Record-Management-System/frontend/src/hooks/useAuthPersist.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { userLogin } from '../Store/Slices/userSlice';\nimport { personLogin } from '../Store/Slices/personSlice';\nimport axiosInstance from \"../axios\";\n\nexport const useAuthPersist = () => {\n    const dispatch = useDispatch();\n\n    const checkAuth = async () => {\n        const accessToken = localStorage.getItem('access_token');\n        if (accessToken) {\n            try {\n                axiosInstance.defaults.headers['Authorization'] = `Bearer ${accessToken}`;\n                const profileResponse = await axiosInstance.get('Auth/profile');\n                \n                dispatch(userLogin({ token: { access: accessToken } }));\n                dispatch(personLogin(profileResponse.data));\n            } catch (error) {\n                console.error('Auth check failed:', error);\n                // Token refresh is handled by axios interceptor\n            }\n        }\n    };\n\n    useEffect(() => {\n        checkAuth();\n    }, []);\n\n    return checkAuth;\n};"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,QAAQ,2BAA2B;AACrD,SAASC,WAAW,QAAQ,6BAA6B;AACzD,OAAOC,aAAa,MAAM,UAAU;AAEpC,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACxD,IAAIF,WAAW,EAAE;MACb,IAAI;QACAL,aAAa,CAACQ,QAAQ,CAACC,OAAO,CAAC,eAAe,CAAC,GAAI,UAASJ,WAAY,EAAC;QACzE,MAAMK,eAAe,GAAG,MAAMV,aAAa,CAACW,GAAG,CAAC,cAAc,CAAC;QAE/DR,QAAQ,CAACL,SAAS,CAAC;UAAEc,KAAK,EAAE;YAAEC,MAAM,EAAER;UAAY;QAAE,CAAC,CAAC,CAAC;QACvDF,QAAQ,CAACJ,WAAW,CAACW,eAAe,CAACI,IAAI,CAAC,CAAC;MAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1C;MACJ;IACJ;EACJ,CAAC;;EAEDnB,SAAS,CAAC,MAAM;IACZQ,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOA,SAAS;AACpB,CAAC;AAACF,EAAA,CAxBWD,cAAc;EAAA,QACNJ,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}