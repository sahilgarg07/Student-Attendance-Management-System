{"ast":null,"code":"var _jsxFileName = \"/home/sahil/Student-Record-Management-System/frontend/src/components/MarkAttendance.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../css/CameraCapture.css';\nimport { redirect } from 'react-router-dom';\nimport axiosInstance from '../axios';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { personLogin } from \"../Store/Slices/personSlice\";\nimport { json, useNavigate } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarkAttendance = () => {\n  _s();\n  const videoRef = useRef();\n  const canvasRef = useRef();\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [student_Id, setStudent_Id] = useState(null);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const person = useSelector(state => {\n    return state.persons.person;\n  });\n  const location = useLocation();\n  const {\n    name_of_course,\n    username_of_person,\n    date_of_session,\n    lat_of_session,\n    lon_of_session,\n    start_time_of_session,\n    end_time_of_session\n  } = location.state || {};\n  useEffect(() => {\n    // Set up the video stream\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(stream => {\n        videoRef.current.srcObject = stream;\n      }).catch(error => console.error('Error accessing the camera:', error));\n    }\n  }, []);\n  const handleCapture = async () => {\n    try {\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n\n      // Set canvas dimensions to match video stream\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n\n      // Draw video frame on canvas\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // Get image data from canvas\n      const imageData = canvas.toDataURL('image/png');\n\n      // Update captured image state\n      setCapturedImage(imageData);\n      console.log(imageData);\n      setStudent_Id(person.username);\n      const res = await axiosInstance.post(\"/Face_Recog/image_verification\", {\n        student_Id,\n        image: imageData\n      });\n      if (res.data.message === \"success\") {\n        const sol = await axiosInstance.post(\"/Home/attendance\", {\n          student_Id: username_of_person,\n          course_name: name_of_course,\n          date: date_of_session,\n          lat: lat_of_session,\n          lon: lon_of_session,\n          start_time: start_time_of_session,\n          end_time: end_time_of_session\n        });\n        if (sol.data.msg === \"Course not found.\") {\n          alert(sol.data.msg);\n        }\n        if (sol.data.msg === \"Invalid sessions_list format in course.\") {\n          alert(sol.data.msg);\n        }\n        if (sol.data.msg === \"Serializer Error in marking attendance.\") {\n          alert(sol.data.msg);\n        }\n        await navigate(\"/\");\n      } else {\n        // If it's a failure, show an alert\n        alert(res.data.message);\n        await navigate(\"/markAttendance\");\n        // You can handle failure in another way, e.g., showing an error message\n        // Or taking a different action based on your application's logic\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      playsInline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCapture,\n      children: \"Capture Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(MarkAttendance, \"+UNfWcMpjrJ+xqejh1Kjo+SJrNM=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useLocation];\n});\n_c = MarkAttendance;\nexport default MarkAttendance;\nvar _c;\n$RefreshReg$(_c, \"MarkAttendance\");","map":{"version":3,"names":["React","useRef","useState","useEffect","axios","redirect","axiosInstance","useDispatch","useSelector","personLogin","json","useNavigate","useLocation","jsxDEV","_jsxDEV","MarkAttendance","_s","videoRef","canvasRef","capturedImage","setCapturedImage","student_Id","setStudent_Id","dispatch","navigate","person","state","persons","location","name_of_course","username_of_person","date_of_session","lat_of_session","lon_of_session","start_time_of_session","end_time_of_session","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","catch","error","console","handleCapture","canvas","context","getContext","width","videoWidth","height","videoHeight","drawImage","imageData","toDataURL","log","username","res","post","image","data","message","sol","course_name","date","lat","lon","start_time","end_time","msg","alert","className","children","ref","autoPlay","playsInline","fileName","_jsxFileName","lineNumber","columnNumber","style","display","onClick","_c","$RefreshReg$"],"sources":["/home/sahil/Student-Record-Management-System/frontend/src/components/MarkAttendance.js"],"sourcesContent":["import React, {useRef, useState, useEffect} from 'react';\nimport axios from 'axios';\nimport '../css/CameraCapture.css';\nimport {redirect} from 'react-router-dom';\nimport axiosInstance from '../axios';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {personLogin} from \"../Store/Slices/personSlice\";\n\n\nimport {json, useNavigate} from \"react-router-dom\";\nimport {useLocation} from 'react-router-dom';\n\n\n\nconst MarkAttendance = () => {\n    const videoRef = useRef();\n    const canvasRef = useRef();\n    const [capturedImage, setCapturedImage] = useState(null);\n    const [student_Id, setStudent_Id] = useState(null);\n    const dispatch = useDispatch();\n    const navigate=useNavigate();\n    \n    const person = useSelector((state) => {\n        return state.persons.person;\n    });\n\n\n    const location=useLocation();\n    \n    const {name_of_course,username_of_person,date_of_session,lat_of_session,lon_of_session,start_time_of_session,end_time_of_session} = location.state || {};\n\n    useEffect(() => {\n        // Set up the video stream\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n            navigator.mediaDevices\n                .getUserMedia({video: true})\n                .then((stream) => {\n                    videoRef.current.srcObject = stream;\n                })\n                .catch((error) => console.error('Error accessing the camera:', error));\n        }\n    }, []);\n\n    const handleCapture = async () => {\n\n       try {\n            const video = videoRef.current;\n            const canvas = canvasRef.current;\n            const context = canvas.getContext('2d');\n\n            // Set canvas dimensions to match video stream\n            canvas.width = video.videoWidth;\n            canvas.height = video.videoHeight;\n\n            // Draw video frame on canvas\n            context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n            // Get image data from canvas\n            const imageData = canvas.toDataURL('image/png');\n\n            // Update captured image state\n            setCapturedImage(imageData);\n            console.log(imageData);\n            setStudent_Id(person.username);\n            const res = await axiosInstance.post(\"/Face_Recog/image_verification\", {\n                student_Id,\n                image: imageData,\n            });\n            if (res.data.message === \"success\") {\n                const sol=await axiosInstance.post(\"/Home/attendance\",{student_Id:username_of_person,course_name:name_of_course,date:date_of_session,lat:lat_of_session,lon:lon_of_session,start_time:start_time_of_session,end_time:end_time_of_session})\n                if(sol.data.msg===\"Course not found.\"){\n                    alert(sol.data.msg);\n                }\n                if(sol.data.msg===\"Invalid sessions_list format in course.\"){\n                    alert(sol.data.msg);\n                }\n                if(sol.data.msg===\"Serializer Error in marking attendance.\"){\n                    alert(sol.data.msg);\n                }\n                await navigate(\"/\");\n            } else {\n                // If it's a failure, show an alert\n                alert(res.data.message);\n                await navigate(\"/markAttendance\")\n                // You can handle failure in another way, e.g., showing an error message\n                // Or taking a different action based on your application's logic\n            }\n            \n        }catch(error) {\n            alert(error);\n        }\n\n    };\n\n    return (\n        <div className=\"video-container\">\n            <video ref={videoRef} autoPlay playsInline/>\n            <canvas ref={canvasRef} style={{display: \"none\"}}/>\n            <button onClick={handleCapture}>Capture Image</button>\n        </div>\n    );\n};\nexport default MarkAttendance;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}